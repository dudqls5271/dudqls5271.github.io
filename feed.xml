<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YB_BIN Blog</title>
  
  <subtitle>개인 공부 및 작업물 공유</subtitle>
  <link href="http://dudqls5271.github.io/feed.xml" rel="self"/>
  
  <link href="http://dudqls5271.github.io/"/>
  <updated>2021-05-26T14:17:57.826Z</updated>
  <id>http://dudqls5271.github.io/</id>
  
  <author>
    <name>LEE Young Bin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>겍채지향 프로그래밍 이란?</title>
    <link href="http://dudqls5271.github.io/2021/05/13/hexo_OOP/"/>
    <id>http://dudqls5271.github.io/2021/05/13/hexo_OOP/</id>
    <published>2021-05-12T15:45:11.125Z</published>
    <updated>2021-05-26T14:17:57.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="객채-지향-프로그래밍"><a href="#객채-지향-프로그래밍" class="headerlink" title="객채 지향 프로그래밍"></a>객채 지향 프로그래밍</h1><p>객체 지향 프로그래밍(이하 OOP)는 컴퓨터 프로그램을 “객체(Object)”들의 모임으로<br>파악하고자 하는 프로그래밍의 패러다임 중에 하나이다. 각 “객체(Object)” 들은 서로 메시지를<br>주고 받을 수 있으며 데이터를 처리할 수 있다.</p><h3 id="객체-지향-프로그래밍-OOP-의-장점은"><a href="#객체-지향-프로그래밍-OOP-의-장점은" class="headerlink" title="객체 지향 프로그래밍(OOP)의 장점은"></a>객체 지향 프로그래밍(OOP)의 장점은</h3><ul><li>프로그램을 유연하고 변경이 용이하게 만든다.</li><li>프로그램의 개발과 보수를 간편하게 만든다</li><li>직관적인 코드 분석을 가능하게 한다.</li></ul><span id="more"></span><p>객체 지향 프로그래밍의 중요한 특성은 <strong>_강한 응집력(Strong Cohesion)과 약한 결합력(Weak Coupling)을 지향한다는</strong> 점이다.</p><p><strong>응집력(Strong Cohesion)</strong></p><blockquote><p>프로그램의 한 요소가 특정 목적을 위해 밀접하게 연관된 기능들이 모여서 구현되어 있고, 지나치게 많은 일을 하지 않으면 그것을 응집력이 높다고 표현한다.</p></blockquote><p><strong>결합력(coupling)</strong></p><blockquote><p>프로그램 코드의 한 요소가 다른 것과 얼마나 강력하게 연결되어 있는지, 얼마나 의존적인지를 나타내는 정도. 결합력이 낮다는 것은 한 요소가 다른 요소들과 관계를 크게 맺고 있지 않은 상태를 의미한다.</p></blockquote><p><img src="https://user-images.githubusercontent.com/49426352/118004452-7088ca80-b384-11eb-85bd-46e73b50ef72.jpg" alt="download"></p><p>필드에 몬스터들을 배치하고 싶다.<br>몬스터의 종류는 파랑 버섯, 주황 버섯, 뿔 버섯, 좀비 버섯이 있다.<br>각 몬스터들은 시간이 흐르고 래벨업을 할 수 있다.</p><h3 id="OOP의-기본-구성-요소"><a href="#OOP의-기본-구성-요소" class="headerlink" title="OOP의 기본 구성 요소"></a>OOP의 기본 구성 요소</h3><ul><li><p>클래스(Class)<br>같은 종류의 집단에 속하는 속성과 행위를 정의한 것.<br>다른 클래스와 독립적으로 만들어줘야 한다.<br>위의 예제에서 몬스터의 특성과 행위들을 정의한 객체가 클래스가 될 것이다.</p></li><li><p>객체(Object)<br>클래스의 인스턴스(Instance). 상위 클래스의 속성을 가지고 있으면서 개별적인 특성과<br>행위 (메서드 : Method)또한 가지고 있다.</p></li><li><p>메서드(Method)<br>클래스로부터 생성된 객체를 사용하는 방법. 객체의 속성을 조작하는 데 사용한다.<br>위의 예제에서 각각의 몬스터들이 레벨업을 하는 행위가 메서드(Method)라고 볼 수 있다.</p></li></ul><h1 id="OOP의-특성"><a href="#OOP의-특성" class="headerlink" title="OOP의 특성"></a>OOP의 특성</h1><h3 id="캡슐화-Encapsulation"><a href="#캡슐화-Encapsulation" class="headerlink" title="캡슐화(Encapsulation)"></a>캡슐화(Encapsulation)</h3><p>캡슐화는 객체의 데이터를 외부에서 직접 접근하지 못하게 막고, 함수를 통해서만 조작이 가능한 작업이다.</p><p>몬스터 레벨(Lv)과 같은 경우는 이용자가 입의로 조작하게 만들면 문제가 생길 가능성이 있기에, 그래서 래벨업(LvUp)이라는 함수를 통해서만 레벨업이 가능하도록 해야한다.</p><h3 id="추상화-Abstraction"><a href="#추상화-Abstraction" class="headerlink" title="추상화(Abstraction)"></a>추상화(Abstraction)</h3><p>추상화는 객체들이 가진 공통의 특성들을 파악하고 불필요한 특성들을 제거 하는 과정을 말한다.</p><p>객체들이 가진 동작들을 기준으로 이용자들이 동작만 쉽게 구동할 수 있도록 한다<br>레벨업(LvUp) 메소드를 실행만 하면 Lv이라는 속성을 컨트롤 할 수 있었던 것처럼.</p><p>이러한 추상화 과정을 통해 이용자들은 프로그래머가 만든 객체를 더 쉽게 사용할 수 있게 된다.</p><p>추상화를 할 때 주의할 점은 <b style="color: red">속성 위주가 아닌 동작 위주로 정의 하는 작업을 하는 것</b>이다.</p><p>어떠한 동작과 속성을 정의하고 불필요한 정의들을 삭제하여 이용자가 편리하게 객체를 이용할 수 있도록 구성한 것이 추상화이다.</p><h1 id="객체지향-프로그래밍-VS-클래스-기반-프로그래밍"><a href="#객체지향-프로그래밍-VS-클래스-기반-프로그래밍" class="headerlink" title="객체지향 프로그래밍 VS 클래스 기반 프로그래밍"></a>객체지향 프로그래밍 VS 클래스 기반 프로그래밍</h1><p>클래스 단위 프로그래밍과 객체지향 프로그래밍이 똑같은 내용인지 알고 있는 사람들이 있는데 일부는 맞고 일부는 틀리다.</p><h3 id="엄격한-의미에서-해석"><a href="#엄격한-의미에서-해석" class="headerlink" title="엄격한 의미에서 해석"></a><span style="color:#5058bd;">엄격한 의미에서 해석</span></h3><p>객체지향 프로그래밍은 네가지특징(<em>추상화, 캡슐화, 상속, 다향성</em>)을 골고루 사용해 프로그램을 만드는것을 객체지향이라고 한다. 하지만 클래스 단위 프로그래밍은 이런 객체지향의 특징을 전혀 사용하지 않고 오직 클래스만을 이용해 프로그래밍 하는 방식을 말한다.</p><h3 id="유연한-의미에서-해석"><a href="#유연한-의미에서-해석" class="headerlink" title="유연한 의미에서 해석"></a><span style="color:#5058bd;">유연한 의미에서 해석</span></h3><p>클래스 단위 프로그램을 객체지향 프로그램이라고 부를 수 있는 이유는 클래스를 만들어 프로그래밍 하는 자체에 이미 객체지향 프로그래밍에 포함 되는 구조를 가지고 있다고 한다.</p><table><thead><tr><th>구분</th><th>절차 지향 프로그래밍</th><th>객체 지향 프로그래밍</th></tr></thead><tbody><tr><td><center>처리 방식</center></td><td><center>문제를 여러 개의 함수로 나누어순차적으로 호출하여 처리하는 방식</center></td><td><center>문제를 여러개의 <span style="color:red">객체</span> 단위로 나누어 처리 하는 방식</center></td></tr><tr><td><center>단점</center></td><td><center>오래된 방식이며 협업해서 진행하는 큰 프로젝트에는 적합하지 않음</center></td><td><center>학습 난이도가 눞음. <br>개발자의 활용능력이 중요함</center></td></tr><tr><td><center>장점</center></td><td><center>간단하고 소규모 프로젝트에 용이함.<br> 비교적 배우기 쉬움</center></td><td><center>최근 가장 많이 사용하는 방식임. <br> 협업이 중요한 대형 프로젝트에 적합함<center></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;객채-지향-프로그래밍&quot;&gt;&lt;a href=&quot;#객채-지향-프로그래밍&quot; class=&quot;headerlink&quot; title=&quot;객채 지향 프로그래밍&quot;&gt;&lt;/a&gt;객채 지향 프로그래밍&lt;/h1&gt;&lt;p&gt;객체 지향 프로그래밍(이하 OOP)는 컴퓨터 프로그램을 “객체(Object)”들의 모임으로&lt;br&gt;파악하고자 하는 프로그래밍의 패러다임 중에 하나이다. 각 “객체(Object)” 들은 서로 메시지를&lt;br&gt;주고 받을 수 있으며 데이터를 처리할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;객체-지향-프로그래밍-OOP-의-장점은&quot;&gt;&lt;a href=&quot;#객체-지향-프로그래밍-OOP-의-장점은&quot; class=&quot;headerlink&quot; title=&quot;객체 지향 프로그래밍(OOP)의 장점은&quot;&gt;&lt;/a&gt;객체 지향 프로그래밍(OOP)의 장점은&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;프로그램을 유연하고 변경이 용이하게 만든다.&lt;/li&gt;
&lt;li&gt;프로그램의 개발과 보수를 간편하게 만든다&lt;/li&gt;
&lt;li&gt;직관적인 코드 분석을 가능하게 한다.&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://dudqls5271.github.io/tags/java/"/>
    
    <category term="OOP" scheme="http://dudqls5271.github.io/tags/OOP/"/>
    
  </entry>
  
  <entry>
    <title>Github Page와 Hexo 유용한 플러그인 설치</title>
    <link href="http://dudqls5271.github.io/2021/05/10/hexo_Plugin/"/>
    <id>http://dudqls5271.github.io/2021/05/10/hexo_Plugin/</id>
    <published>2021-05-10T13:09:37.041Z</published>
    <updated>2021-05-11T14:25:33.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SED"><a href="#SED" class="headerlink" title="SED"></a>SED</h3><p>SEO란?:<br>영어로 Search Engine Optimization로 대부분 검색엔진 최적화(SEO)와 관련되어있다.</p><h3 id="플러그인-설치-or-삭제"><a href="#플러그인-설치-or-삭제" class="headerlink" title="플러그인 설치 or 삭제"></a>플러그인 설치 or 삭제</h3><blockquote><p>$ npm install -save</p></blockquote><h3 id="삭제"><a href="#삭제" class="headerlink" title="삭제"></a>삭제</h3><blockquote><p>$ npm uninstall</p></blockquote><hr><h3 id="hexo-autonofollow"><a href="#hexo-autonofollow" class="headerlink" title="hexo-autonofollow"></a>hexo-autonofollow</h3><p>이 플러그인은 rel=”external nofollow” 속성을 추가하여 외부 링크 크롤링을 막아 준다고 한다.</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-autonofollow --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nofollow:</span><br><span class="line"><span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">exclude:</span><br><span class="line">- exclude1.com</span><br><span class="line">- exclude2.com</span><br></pre></td></tr></table></figure><h3 id="hexo-auto-canonical"><a href="#hexo-auto-canonical" class="headerlink" title="hexo-auto-canonical"></a>hexo-auto-canonical</h3><p>이 플러그인은 대표 URL을 지정해준다고 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-auto-canonical</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- autoCanonical(config, page) %&gt;</span><br></pre></td></tr></table></figure><p>나는 head.ejs안에 위의 코드를 넣었다, 근데 테마마다 다름으로 주위 해줘야한다.<br>Control + P 을 누르면 파일 검색이 가능하다.</p><h3 id="hexo-generator-seo-friendly-sitemap"><a href="#hexo-generator-seo-friendly-sitemap" class="headerlink" title="hexo-generator-seo-friendly-sitemap"></a>hexo-generator-seo-friendly-sitemap</h3><p>이 플러그인은 더욱 효율적으로 크롤링을 할 수 있도록 사이트맵 xml 파일을 자동으로 생성해 주는 것 이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure><p>_config.yml에 아래 코드를 추가 해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sitemap auto generator</span></span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h3><p>RSS 피드를 만들어서 일종의 블로그 구독기능을 만들어 주는 것이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>_config.yml에 아래 내용을 추가 해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># rss feed auto generator</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: rss2</span><br><span class="line">  path: rss2.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br></pre></td></tr></table></figure><p>각각<br>type : feed의 종류 (atom/rss2) - * 네이버는 atom을 지원하지 않음<br>path : feed가 생성될 경로(default : atom.xml, rss2.xml)<br>limit : 최신 포스트 수 설정 (0 또는 false - 전체 포스트)</p><h3 id="hexo-asset-link-필수-설치"><a href="#hexo-asset-link-필수-설치" class="headerlink" title="hexo-asset-link 필수 설치"></a>hexo-asset-link <em>필수 설치</em></h3><p>말 그래도 이 플러그인은 필수 설치이다.<br>내가 평소에 md파일에 글을 올리때 vs코드를 사용하는데, 이미지를 올릴때는 Github에 들어가서 이미지 파일을 따로 넣어줘야 했는데 이 플러그인을 설치해주면</p><p>md파일이 있는곳에 포스트의 이름과 동의한 폴더를 만들고 이미지를 넣어주면 아래와 같이 나온다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-- _posts/</span><br><span class="line">|   +-- hexo_insatall.md</span><br><span class="line">|   +-- hexo_insatall/</span><br><span class="line">|       +-- Test-Image.png</span><br><span class="line">|       +-- Test-Other-File.pdf</span><br></pre></td></tr></table></figure><p>그러면 이제 이미지에 접근할때</p><p>!”[이미지 설명]”(Test-Image)<br>으로 간단하게 접근이 가능해진다.</p><p>자세한 설명은 <a href="https://www.npmjs.com/package/hexo-asset-link">여기</a>에서 확인할 수 있다.</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;SED&quot;&gt;&lt;a href=&quot;#SED&quot; class=&quot;headerlink&quot; title=&quot;SED&quot;&gt;&lt;/a&gt;SED&lt;/h3&gt;&lt;p&gt;SEO란?:&lt;br&gt;영어로 Search Engine Optimization로 대부분 검색엔진 최적화(SEO)와 관련되어있다.&lt;/p&gt;
&lt;h3 id=&quot;플러그인-설치-or-삭제&quot;&gt;&lt;a href=&quot;#플러그인-설치-or-삭제&quot; class=&quot;headerlink&quot; title=&quot;플러그인 설치 or 삭제&quot;&gt;&lt;/a&gt;플러그인 설치 or 삭제&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;$ npm install -save&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;삭제&quot;&gt;&lt;a href=&quot;#삭제&quot; class=&quot;headerlink&quot; title=&quot;삭제&quot;&gt;&lt;/a&gt;삭제&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;$ npm uninstall&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;hexo-autonofollow&quot;&gt;&lt;a href=&quot;#hexo-autonofollow&quot; class=&quot;headerlink&quot; title=&quot;hexo-autonofollow&quot;&gt;&lt;/a&gt;hexo-autonofollow&lt;/h3&gt;&lt;p&gt;이 플러그인은 rel=”external nofollow” 속성을 추가하여 외부 링크 크롤링을 막아 준다고 한다.&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="http://dudqls5271.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Github Page와 Hexo로 블로그 만들고 테마 적용하기</title>
    <link href="http://dudqls5271.github.io/2021/05/08/hexo_install/"/>
    <id>http://dudqls5271.github.io/2021/05/08/hexo_install/</id>
    <published>2021-05-08T14:50:48.338Z</published>
    <updated>2021-05-11T14:35:28.401Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA온라인스터디를 하면서 사람들이 Github로 블로그를 만드는 것을 보고 신기해서 만들게 되었다.<br>조금 검색 해보니깐 Github는 Github Pages애 블로그를 만들어 볼려고 한다. 조금 구글에서 검색해보니깐 대부분 hexo?을 많이 사용한다고 하길래 나도 한번 hexo을 이용해서 블로그를 만들어 볼려고 한다.</p><h3 id="기본-설치-프로그램"><a href="#기본-설치-프로그램" class="headerlink" title="기본 설치 프로그램"></a>기본 설치 프로그램</h3><p>vscode와 NodeJS을 깔아주었다.<br><a href="https://code.visualstudio.com/download">vscode</a>, <a href="https://nodejs.org/ko/">NodeJS</a> 다운 링크</p><p><img src="https://user-images.githubusercontent.com/49426352/117543472-09070e00-b058-11eb-8d5e-d3ffd3693707.png" alt="p2"></p><p>NodeJs는 다음과 같이 cmd에 Node라고 처주면 설치확인이 가능하다.</p><span id="more"></span><h3 id="1-레포지터리-만들기"><a href="#1-레포지터리-만들기" class="headerlink" title="1. 레포지터리 만들기"></a>1. 레포지터리 만들기</h3><p>우선 github에 새로운 레포지터리를 만들어 준다.<br><img src="https://user-images.githubusercontent.com/49426352/117542272-e9b9b200-b052-11eb-9ab4-2cbaae5240e8.png" alt="p1"></p><p>여기서 중요한것은 “자신의Github로ID”.githud.io로 만들어줘야 한다는 점이다.<br>나의 Github로 보자면 dudqls5271.github.io가 되는것이다.</p><h3 id="2-hexo-설치"><a href="#2-hexo-설치" class="headerlink" title="2. hexo 설치"></a>2. hexo 설치</h3><p>다음 사진과 같이 입력 해주면 hexo 기본설치가 시작 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/49426352/117543483-14f2d000-b058-11eb-90ee-848b32980972.png" alt="화면 캡처 2021-05-08 233126"></p><p>설치가 완료 되면 다음과 같이 여러개의 폴더 들이 생긴 것을 볼 수가 있다.</p><p>마지막으로 아래을 입력해주면 hexo에 필요한 파일들이 설치가 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/49426352/117543494-1cb27480-b058-11eb-87b3-c6412440b3b2.png" alt="화면 캡처 2021-05-08 233215"></p><h3 id="3-테마-설정"><a href="#3-테마-설정" class="headerlink" title="3. 테마 설정"></a>3. 테마 설정</h3><p>다음은 테마 설정이다.<br>테마는 다른 사람들이 만들어 준 테마를 사용하면된다. <a href="https://code.visualstudio.com/download">[여기]</a>서 테마를 고를수 있다.<br>원하는 테마를 고른뒤 그 사람의 Github에 들어가서 URL을 복사 해준뒤 다음과 같이 콘솔에 적어주면 된다.</p><p><img src="https://user-images.githubusercontent.com/49426352/117543513-2936cd00-b058-11eb-96ae-377f08cbf7d1.png" alt="화면 캡처 2021-05-08 234329"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes</span><br><span class="line">$ git <span class="built_in">clone</span> 링크</span><br></pre></td></tr></table></figure><p>그러면 themes에 추가가 된것을 볼 수 있을것이다.<br>에제 theme을 본인 마음대로 바꿔주면 된다.</p><h3 id="4-기본-정보-수정"><a href="#4-기본-정보-수정" class="headerlink" title="4. 기본 정보 수정"></a>4. 기본 정보 수정</h3><blockquote><p><a href="https://hexo.io/docs/">여기</a> 에서 다양한 옵션을 볼 수 있습니다!</p></blockquote><h3 id="4-1-site-기본-정보-수정"><a href="#4-1-site-기본-정보-수정" class="headerlink" title="4-1. site 기본 정보 수정"></a>4-1. site 기본 정보 수정</h3><p>_config.yml에 들어가면 site 가 있을 것입니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: YB_BIN Blog</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author:</span><br><span class="line">language:</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p>위의 부분을 찾아서 원하는대로 수정하면 된다.<br>나 같은 경우는 다음과 같이 수정다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: YB_BIN Blog</span><br><span class="line">subtitle: <span class="string">&#x27;개인 공부 및 작업물 공유&#x27;</span></span><br><span class="line">description: <span class="string">&quot;YB_BIN의 블로그 입니다.&quot;</span></span><br><span class="line">keywords: programming, java, html, web, front</span><br><span class="line">email: youngbin5271@gmail.com</span><br><span class="line">author: <span class="string">&#x27;LEE YoungBin&#x27;</span></span><br><span class="line">language: ko</span><br><span class="line">timezone: <span class="string">&#x27;Asia/Seoul&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-URL-정보-수정"><a href="#4-2-URL-정보-수정" class="headerlink" title="4-2. URL 정보 수정"></a>4-2. URL 정보 수정</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line">github.io/project</span><br><span class="line">url: http://example.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span></span><br><span class="line">  trailing_html: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>라고 되어있는데, 여기서 url에 자신의 Github 유저명을 넣어서 <a href="http://username.github.io을/">http://username.github.io을</a> 넣어주면 된다!</p><p>나는 다음과 같이 수정 했다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line">github.io/project</span><br><span class="line">url: http://dudqls5271.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span></span><br><span class="line">  trailing_html: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="4-3-Deploy-설정3"><a href="#4-3-Deploy-설정3" class="headerlink" title="4-3. Deploy 설정3"></a>4-3. Deploy 설정3</h3><p>이 항목에 본인의 Gitpage Repository 정보를 넣어서 수정해주면 된다.<br>여기도 username 바꿔줘야 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/dudqls5271/dudqls5271.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="5-hexo-테스트"><a href="#5-hexo-테스트" class="headerlink" title="5. hexo 테스트"></a>5. hexo 테스트</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo s 도 가능하다.</p></blockquote><p>위의 문구를 콘솔에 치면 서버가 열렸다는 문구와 같이 <a href="http://localhost:4000/">http://localhost:4000</a> 가 열릴 것이다.<br>여기에 들어가면 본인이 설정한 블로그를 볼 수 있습니다.</p><h3 id="6-Github에-배포하기"><a href="#6-Github에-배포하기" class="headerlink" title="6. Github에 배포하기"></a>6. Github에 배포하기</h3><p>이제 지금 까지 만든 Hexo 블로그를 Github로 배포를 해보자.<br>아까 Hexo을 설치하던 콘솔 창을 다시 열어 준다.</p><p>아래의 두 명령어를 입력해서 생성, 배포해준다.</p><h3 id="Hexo를-이용해-정적-웹-리소스-생성하기"><a href="#Hexo를-이용해-정적-웹-리소스-생성하기" class="headerlink" title="Hexo를 이용해 정적 웹 리소스 생성하기"></a>Hexo를 이용해 정적 웹 리소스 생성하기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo g도 가능하다.</p></blockquote><h3 id="github에-배포하기"><a href="#github에-배포하기" class="headerlink" title="github에 배포하기"></a>github에 배포하기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo d도 가능하다.</p></blockquote><blockquote><p>이 두가지를 합쳐서 <br> hexo generate -deploy 혹은 hexo g -d로 사용가능하다.</p></blockquote><p>혹시라도 배포시</p><blockquote><p>ERROR Deployer not found: git<br></p></blockquote><p>라는 오류 문구가 나오면</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>를 통해서 플러그인을 다시 설피 해준다.</p><p>여기까지 하면 <a href="https://username.github.io로/">https://username.github.io로</a> 들어가보면 hexo 페이지가 보일 것 이다.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;JAVA온라인스터디를 하면서 사람들이 Github로 블로그를 만드는 것을 보고 신기해서 만들게 되었다.&lt;br&gt;조금 검색 해보니깐 Github는 Github Pages애 블로그를 만들어 볼려고 한다. 조금 구글에서 검색해보니깐 대부분 hexo?을 많이 사용한다고 하길래 나도 한번 hexo을 이용해서 블로그를 만들어 볼려고 한다.&lt;/p&gt;
&lt;h3 id=&quot;기본-설치-프로그램&quot;&gt;&lt;a href=&quot;#기본-설치-프로그램&quot; class=&quot;headerlink&quot; title=&quot;기본 설치 프로그램&quot;&gt;&lt;/a&gt;기본 설치 프로그램&lt;/h3&gt;&lt;p&gt;vscode와 NodeJS을 깔아주었다.&lt;br&gt;&lt;a href=&quot;https://code.visualstudio.com/download&quot;&gt;vscode&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/ko/&quot;&gt;NodeJS&lt;/a&gt; 다운 링크&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/49426352/117543472-09070e00-b058-11eb-8d5e-d3ffd3693707.png&quot; alt=&quot;p2&quot;&gt;&lt;/p&gt;
&lt;p&gt;NodeJs는 다음과 같이 cmd에 Node라고 처주면 설치확인이 가능하다.&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="http://dudqls5271.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
