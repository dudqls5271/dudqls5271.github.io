<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>YoungBin</title>
    <link>http://dudqls5271.github.io/</link>
    
    <atom:link href="http://dudqls5271.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개인 공부 및 작업물 공유</description>
    <pubDate>Tue, 30 Nov 2021 12:01:58 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>서버셋팅 - CentOS7설치</title>
      <link>http://dudqls5271.github.io/2021/11/30/server02/</link>
      <guid>http://dudqls5271.github.io/2021/11/30/server02/</guid>
      <pubDate>Tue, 30 Nov 2021 11:28:16 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;오늘은 저번에 올렸던 &lt;b&gt;“서버셋팅 -VMware설치”&lt;/b&gt;에 이어서 CentOS7을 설치 해볼 것이다.&lt;br&gt;저번 포스팅이기 때문에 저번 포스팅을 &lt;a href=&quot;https://dudqls5271.github.io/2021/11/29/ser</description>
        
      
      
      
      <content:encoded><![CDATA[<p>오늘은 저번에 올렸던 <b>“서버셋팅 -VMware설치”</b>에 이어서 CentOS7을 설치 해볼 것이다.<br>저번 포스팅이기 때문에 저번 포스팅을 <a href="https://dudqls5271.github.io/2021/11/29/server01/">여기!</a>에서 읽고 이 포스팅을 보는 것을 추천한다.</p><p>일단 CentOS을 설치 하기 전에 CentOS가 뭔지 알아야 할 것 아닌가?</p><blockquote><p>CentOS는 CentOS 프로젝트에서 레드햇 제휴로 개발한 컴퓨터 운영 체제이다.<br>업스트림 소스인 레드햇 엔터프라이즈 리눅스와 완벽하게 호환되는 무료 기업용 컴퓨팅 플랫폼을 제공할 목적으로 만들어진 리눅스계 운영 체제 가운데 하나다.<br>출처 - 위키백과</p></blockquote><p>일단 저번 포스팅에서 VMware을 이용하서 공간을 나눠줬다면 이번에는 운영체제를 설치 할 순서 인것이다.</p><p>저번 포스팅에서 설정해준 VMware을 켜주는 것 까지 했는데, 상세화면을 클릭하면 아래와 같은 화면을 볼 수 있다.<br>여기서 인스톨을 선택하여 실행해준다.<br><img src="https://user-images.githubusercontent.com/49426352/144038830-e2404df8-9e0b-40c8-8eb2-52c697201d93.png" alt="image"></p><p>인스톨을 선택해서 들어가면 다음과 같은 화면이 나오는데<br>여기서 언어는 한국어를 선택해주면 된다.<br><span style="color:red;"><b>여기서 영어나 다른 언어를 선택한다면 나중에 터미널에서 귀찮게 다시 한글 셋팅을 해주어야 한다.</b></span><br><img src="https://user-images.githubusercontent.com/49426352/144038849-fb3dfe48-2d57-477d-bdac-f3e491d3cbaf.png" alt="image"></p><p>이제 설치 할 옵션을을 정해줘야하는데 이글에서는 디스크 / 소프트웨어 / 네트워크를 셋팅 해줄 것이다.<br>아래 화면에 나오는 것처럼 <span style="color:red;"><b>설치대상</b></span>을 클릭을 해준다.<br><img src="https://user-images.githubusercontent.com/49426352/144038881-7208eb79-7cf8-4742-8b2b-89eefa68d2e9.png" alt="image"></p><p>로컬 표준 디스크 - 여기서는 저번글에서 만들어 줬던 백업용 디스크가 같이 나오게 되는데 이것을 <span style="color:red;"><b>2개다</b></span> 클릭해준다.<br>기타 저장소 옵션 - 여기서 보면 <span style="color:red;"><b>파티션을 자동으로 설정 합니다</b></span>에 체크가 되어 있을 것인데 이것을 <span style="color:red;"><b>파티션을 설정합니다.</b></span>로 변경해준다.<br>다음과 같은 설정을 해주었다면 상단에 있는 완료 버튼을 눌러준다.<br><img src="https://user-images.githubusercontent.com/49426352/144038983-184215a2-6e14-4c99-9ce5-2d13ca0b531d.png" alt="image"></p><p>완료 버튼을 누르면 다음과 같이 파티션을 나누는 설정으로 가게 된다. 여기서 밑에 보이는 + 버튼을 통해 다음과 같은 파티션을 만들어 준다.<br><img src="https://user-images.githubusercontent.com/49426352/144039022-49a67c09-6112-4a52-aec7-07595c691bc4.png" alt="image"> <img src="https://user-images.githubusercontent.com/49426352/144039037-63c90d94-48b0-4cfd-a579-958f943b8b89.png" alt="image"></p><p>다음과 같은 방식으로 만드어 준다. 여기서 보면 아래와 같이 및 기타 1을 보게 될 수 있는데, 이것을 처음에는 백업용 디스크를 잡아줘서 그런 것이다.<br>여기서 주위 해야 할 점은 장치에 VMware Virtual disk (sda), VMware Virtual disk (sdd)이 같은 것 처럼 보이지만 다른 2가지가 있다.<br>이것을 잘 구분 하여 파티션을 나줘 주길 바란다.<br><img src="https://user-images.githubusercontent.com/49426352/144039044-a7c5ea41-5e34-4934-8298-c5852cd8bc0d.png" alt="image"></p><p>아래을 참고하여 나머지 파티션들도 만들어 준다. 사진 옆에 간단한 표를 넣어 주겠다.<br><img src="https://user-images.githubusercontent.com/49426352/144039071-af86929b-ace4-4ba8-bae9-e34dd7ad3183.png" alt="image"><br>아래 표에서 /는 남은 용량 전부를 넣어주면 된다.</p><table><thead><tr><th>마운트 지점</th><th>용량</th><th>장치</th><th>파일시스템</th></tr></thead><tbody><tr><td>/boot</td><td>500M</td><td>sda</td><td>ext4</td></tr><tr><td>/backup</td><td>50G</td><td>sdb</td><td>ext4</td></tr><tr><td>/swap</td><td>2G</td><td>sda</td><td>ext4</td></tr><tr><td>/home</td><td>30G</td><td>sda</td><td>ext4</td></tr><tr><td>/</td><td>나머지 용량</td><td>sda</td><td>ext4</td></tr></tbody></table><p>모든 파티션을 만들어주고 완료 버튼을 누르면 다음과 같은 화면이 나오게 된다. 여기서 변경 사항 적용을 눌러주면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/144039085-3ca252ef-7b50-46a0-96b1-1de5b04e1e59.png" alt="image"></p><p>다음은 소프트웨어 선택을 눌러 작업을 진행 해줄 것이다.<br><img src="https://user-images.githubusercontent.com/49426352/144039094-243890ba-625a-4341-82c2-ae886e29d58f.png" alt="image"></p><p>클릭을 하면 다음과 같은 화면들이 나오게 되는데<br>여기서 <span style="color:red;"><b>기본환경-&gt; 기본 웹 서버</b></span>을 선택해주고 추가 옵션은 선택하지 않는다.<br><img src="https://user-images.githubusercontent.com/49426352/144039103-3cf122db-7737-4a57-96a1-cfa71074a7e9.png" alt="image"></p><p>다음은 네트워크 및 호스팅명을 선택해서 들어가준다.<br><img src="https://user-images.githubusercontent.com/49426352/144039116-330523c5-2181-40c0-8383-eac395092308.png" alt="image"></p><p>여기서 이더넷 부분이 꺼져있을 것인데. 이것을 켬으로 변경해주면 유동 ip로 셋팅이 된다.<br><img src="https://user-images.githubusercontent.com/49426352/144039125-8230065a-eb40-45f6-bf8d-0a26d59675e1.png" alt="image"></p><p>위에서 했던 모든 설정을 끝내면 설치 시작 이라는 버튼이 활성화가 될 것인데, 나는 스크린샷을 찍지 않아서 기존에 있던 것을 사용해서 아래와 같이 나오는 것이다.<br><img src="https://user-images.githubusercontent.com/49426352/144039141-bfb747f7-ae07-48f1-9eab-878649b40566.png" alt="image"></p><p>여기서 부터는 너무 쉬워서 따로 캡처를 하지 않았다. 여기서 ROOT암호와 사용자 생성을 해주면 끝난다.</p><blockquote><p><span style="color:red;"><b>주위!!<br>ROOT암호와 사용자 생성은 무조건 메모장이나 해당프로젝트 README 파일에 꼭 저장 해줘야 한다.</b></span></p></blockquote><p>설치가 완료 되었으면 재부팅 버튼을 눌러서 재부팅 후 로그인해준다.<br><img src="https://user-images.githubusercontent.com/49426352/144039150-3be67fbe-74a4-4033-aa47-3845dcf076c1.png" alt="image"></p><p>재부팅을 해주면 다음과 같이 로그인을 하라는 창이 나오는데 아까 만들어 줬던 ROOT 이름과 암호로 로그인 해주면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/144039171-69d55c6c-f84b-4ee2-b141-496862070c0e.png" alt="image"></p><p>로그인을 해주면 다음과 같은 화면이 나오게 되는데<br>여기서 yum update을 통해서 업데이트를 받아주면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/144039189-ee81af6d-1876-47ef-a332-16ebef56a85a.png" alt="image"></p><p>업데이트 중간에 다음과 같은화면이 나올 것인데 당황 하지말고 Y을 입력 해주고 엔터를 누르면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/144039194-bd8317c4-6105-4e2d-9f3d-8d72cede1d4f.png" alt="image"></p><p>Complete!가 뜨면 완료가 된 것이다.<br><img src="https://user-images.githubusercontent.com/49426352/144039198-78f339cb-2372-47c1-87ca-ecbdbd0b9a27.png" alt="image"></p><p>이상으로 CentOS7설치를 마친다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="http://dudqls5271.github.io/tags/server/">server</category>
      
      <category domain="http://dudqls5271.github.io/tags/CentOS7/">CentOS7</category>
      
      <category domain="http://dudqls5271.github.io/tags/Linux/">Linux</category>
      
      
      <comments>http://dudqls5271.github.io/2021/11/30/server02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>서버셋팅 - VMware설치</title>
      <link>http://dudqls5271.github.io/2021/11/29/server01/</link>
      <guid>http://dudqls5271.github.io/2021/11/29/server01/</guid>
      <pubDate>Sun, 28 Nov 2021 15:48:22 GMT</pubDate>
      
      <description>&lt;p&gt;오늘은 얼마전에 회사에서 새로운 프로젝트를 시작해서 서버를 셋팅하는데 그 과정을 설명하는 글이 될 것 같다.&lt;/p&gt;
&lt;p&gt;일단 VMware을 서버에 설치 하기에 앞서서 VMware가 뭔지 알아야 할것 같다.&lt;br&gt;VMware에 앞에 VM(Virtual Machine)는 말 그대로 해석하자면 가상의 기계장치로 생각해볼수 있다.&lt;br&gt;그러면 VMware을 왜 사용하는가? 원래는 컴퓨터 1대당 1개의 운영체제를 사용함으로 만약 다른 운영체제가 필요 할때는 새로운 운영체제가 담긴 컴퓨터를 구해오는 방법 밖에 없다.&lt;br&gt;이러한 문제를 해결하기 위해 나온 것이 VMware이라고 생각하면 편하다. 한마디로 1개의 서버에 여러개의 운영체제를 설치하여 서버구메 비용을 줄이는 것이다. &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>오늘은 얼마전에 회사에서 새로운 프로젝트를 시작해서 서버를 셋팅하는데 그 과정을 설명하는 글이 될 것 같다.</p><p>일단 VMware을 서버에 설치 하기에 앞서서 VMware가 뭔지 알아야 할것 같다.<br>VMware에 앞에 VM(Virtual Machine)는 말 그대로 해석하자면 가상의 기계장치로 생각해볼수 있다.<br>그러면 VMware을 왜 사용하는가? 원래는 컴퓨터 1대당 1개의 운영체제를 사용함으로 만약 다른 운영체제가 필요 할때는 새로운 운영체제가 담긴 컴퓨터를 구해오는 방법 밖에 없다.<br>이러한 문제를 해결하기 위해 나온 것이 VMware이라고 생각하면 편하다. 한마디로 1개의 서버에 여러개의 운영체제를 설치하여 서버구메 비용을 줄이는 것이다. </p><span id="more"></span><p>설명은 여기까지 하고 VMware설치에 들어가보자</p><p>처음 VMware을 들어가보면 다음과 같은 화면이 나올텐데<br>왼쪽에 보면 “가상시스템”에 들어가서 “VM 생성/등록”에 들어가보면<br><img src="https://user-images.githubusercontent.com/49426352/143772776-b1a670aa-ea81-4780-9267-231a67f26329.png" alt="VMware처음_화면"></p><p>다음과 같은 화면이 나오게 될 것이다.<br>여기서 “새 가상 시스템 생성”을 눌러주소 다음을 눌러준다.<br><img src="https://user-images.githubusercontent.com/49426352/143774436-b695748b-9dfd-4283-ae74-736bc79bc2cb.png" alt="생성유형 선택"></p><p>다음은 이름 및 게스트 OS 선택이다.<br>여기서는 가상 시스템의 이름, 버전, OS, OS 버전 등을 설정 해준다.<br>나는 일단 그림과 같이 설정 해주 었다.<br>/==============================================/<br>호환성           :    ESXi 6.5 가상시스템<br>게스트 OS 제품군 : Linux<br>게스트 OS 버전을 : CentOS 7 (64비트)<br>/==============================================/<br><img src="https://user-images.githubusercontent.com/49426352/143774439-4e1dcc93-32bd-45f4-982f-441b7fa4ddfb.png" alt="이름 및 게스트 OS 선택"></p><p>다음은 스토리지 선택이다.<br>현제 돌아가고 있는 서버의 저장공간이 나올 것인데 알아서 잘 선택해주면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/143774468-f1fb698c-aec6-47ad-8e9d-025c13076572.png" alt="스트로지 선택"></p><p>다음은 가상 하드웨어의 설정인데<br>위에서부터 <span style="color:red;"><b> CPU, 메모리, 하드디스크, 새 하드디스크, 네트워크 어댑터, CD/DVD 드라이브 1 </b></span>을 설정을 해줄 것이다.<br>여기서 하드웨어를 2개를 만드는 이유는 백을을 위햠이다.<br>나는 아래 사진과 같이 셋팅 해주었다.<br> <span style="color:red;"><b>네트워크는 반드시 VMKernel로 해줘야 한다.</b></span>  CD/DVD 드라이브에는 (<span style="color:red;"><b>미리 서버에 설치를 원하는 OS의 ISO파일을 널어줘야 한다.</b></span>)<br><img src="https://user-images.githubusercontent.com/49426352/143774870-c34549db-b87f-4faa-bf47-f707e2c4b16c.png" alt="설정 사용자 지정"></p><p>방금고 같이 설정을 해줬다면 아래에 생성중인 상태바가 보이게 된다.<br>이제 위를 보면 생성이 완료된 것을 볼 수 있을 것이다. 생성된 VM을 클릭하면 상세화면을 볼 수 있다.<br><img src="https://user-images.githubusercontent.com/49426352/143775355-9fbb1348-63fb-4408-bea8-562ed234d1bd.png" alt="추가 메인화면"></p><p>이제 상세화면에 들어가서 상단에 보이는 전원 켜기을 눌러서 전원을 실행 시켜준다.<br><img src="https://user-images.githubusercontent.com/49426352/143774914-4b241506-1bc2-4cf7-8cb1-1d32f289f26b.png" alt="상세화면"></p><p>이상으로 VMware설치을 마친다. 다음 글에서는 OS설치을 다루어 볼 예정이다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="http://dudqls5271.github.io/tags/VMware/">VMware</category>
      
      <category domain="http://dudqls5271.github.io/tags/server/">server</category>
      
      
      <comments>http://dudqls5271.github.io/2021/11/29/server01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>엑셀 업로드시 날자 형식에 대하여</title>
      <link>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.23%20/</link>
      <guid>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.23%20/</guid>
      <pubDate>Wed, 03 Nov 2021 11:08:02 GMT</pubDate>
      
      <description>&lt;p&gt;엑셀 업로드시 사용자가 입력가능한 날자의 입력방식이&lt;br&gt;YYYY-MM-DD, YY-MM-DD, YY.MM.DD, YYYY.MM.DD 등등 여려가지 일것이다. 하지만&lt;br&gt;우리가 엑셀 업로드를 진행하는 과정에서 위에 있는 어떠한 방식으로 사용하는 JAVA로 넘어가고 DB에서 처리 해줄려고 하면 오류가 난다. &lt;/p&gt;
&lt;p&gt;오류가 나는 이유는 간단하다. 그것은 바로 DB에서 지원하는 날짜표준이 아니기 때문이다.&lt;br&gt;검색을 통해 알아낸 결과는 전세계 날자 표준이 YYYY-MM-DD임으로 DB의 날짜타입도 YYYY-MM-DD 이런 형식으로 표시 되는것이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>엑셀 업로드시 사용자가 입력가능한 날자의 입력방식이<br>YYYY-MM-DD, YY-MM-DD, YY.MM.DD, YYYY.MM.DD 등등 여려가지 일것이다. 하지만<br>우리가 엑셀 업로드를 진행하는 과정에서 위에 있는 어떠한 방식으로 사용하는 JAVA로 넘어가고 DB에서 처리 해줄려고 하면 오류가 난다. </p><p>오류가 나는 이유는 간단하다. 그것은 바로 DB에서 지원하는 날짜표준이 아니기 때문이다.<br>검색을 통해 알아낸 결과는 전세계 날자 표준이 YYYY-MM-DD임으로 DB의 날짜타입도 YYYY-MM-DD 이런 형식으로 표시 되는것이다.</p><span id="more"></span><p>하지만 위에서 말한 것 처럼 사용자가 어떠한 방법으로 입력한들 JAVA에 넘어오는 값은 YY. MM. DD 이다 이것의 가장큰 문제는 . 다음에 공백이 있다는 것이다.<br>처음에는 진짜 미친척 현재 년도 구하고 그 앞자리 잘라서  YY 앞에 20YY이런식으로 붙이고 공백 제거 하고, .을 -으로 변경해서 넣을려고 했는데 조금만 검색해보니깐 그렇게 까지 할 필요는 없었다.</p><p>해결 방법은 간단하다. 사용자가 입력하는 엑셀의 데이터 타입을 변경해주면 끝나는 것이다.<br>사진을 첨부 하겠다.</p><p>표시 형식에서 Control + A로 전체 선택 후<br><img src="https://user-images.githubusercontent.com/49426352/140049907-7b776d84-6961-4ddf-a56d-f47097d6212f.png" alt="KakaoTalk_20211022_142249413"></p><p>사진에서 본 것 처럼 전체 셀을 선택 한다음 표시 형식을 일반에서 텍스트로 변경해주면 된다.<br>이 처럼 해주면 JAVA로 넘길때 날자가 넘어가는게 아니고 String 형식으로 넘어가게 되는데 그러면<br>우리가 원하는 대로 YYYY-MM-DD 형식으로 날짜가 들어 갈 것이다. </p><p><img src="https://user-images.githubusercontent.com/49426352/140049910-be55b8c4-17b6-4fa6-a26e-ae24137f15b1.png" alt="KakaoTalk_20211022_142304652"></p><p>JAVA에서 DB로 값을 넘길때 String 이든 int 든 상관 없이 다 String으로 보내주기 때문에 위 처럼 해도 상관이 없다는것이다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/">트러블슈팅</category>
      
      
      <comments>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.23%20/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>전화번호 11자리? 12자리?</title>
      <link>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.21/</link>
      <guid>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.21/</guid>
      <pubDate>Wed, 03 Nov 2021 10:58:15 GMT</pubDate>
      
      <description>&lt;p&gt;예전 전화번호는 01X - XXX - XXXX의 형식의 번호도 있었으나&lt;br&gt;010이라는 번호가 적용되면서 01X 는 아직까지 있지만 01X - XXX - XXXX의 형태는 사라졌다고 한다.&lt;br&gt;그러면 원래 01X - XXX - XXXX의 형태의 번호를 가지고 있던 사람의 번호는 어떻게 되는가?&lt;br&gt;그것은 바로 원래 보유중이던 3자릿수에 맨 앞자리에 숫자를 추가하는 것이다.&lt;br&gt;ex) 01X - NXXX - XXXX 이런식으로 추가가 되는것이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>예전 전화번호는 01X - XXX - XXXX의 형식의 번호도 있었으나<br>010이라는 번호가 적용되면서 01X 는 아직까지 있지만 01X - XXX - XXXX의 형태는 사라졌다고 한다.<br>그러면 원래 01X - XXX - XXXX의 형태의 번호를 가지고 있던 사람의 번호는 어떻게 되는가?<br>그것은 바로 원래 보유중이던 3자릿수에 맨 앞자리에 숫자를 추가하는 것이다.<br>ex) 01X - NXXX - XXXX 이런식으로 추가가 되는것이다.</p><span id="more"></span><p>이 이야기를 왜 했느냐 그것은 10월21일에 사용자의 전화번호를 엑셀 데이터에 입력받아 DB에 업로드 하는 과정에서 일어난 일이다. DB상에서는 예를 들어서 컬럼이 companyPhone1, companyPhone2, companyPhone3 이런식으로 3개의 컬럼으로 각각 01X, XXXX, XXXX 로 구분을 해줬다.<br><img src="https://user-images.githubusercontent.com/49426352/140048545-7f1663ba-5e63-434d-ac17-03498dc22496.png" alt="KakaoTalk_20211103_195238880"></p><p>하지만 사용자 입장에서 엑셀에 적는 데이터는 대부분 01X - XXXX - XXXX이런 형식으로 하이폰(-)을 포함안  13수의 번호를 적게 된다.<br><img src="https://user-images.githubusercontent.com/49426352/140048553-709abab1-7812-4081-b19b-d7296e691b5a.png" alt="KakaoTalk_20211103_195437014"></p><p>여기서는 대부분 subString로 잘라줘서 각각의 컬럼에 넣으면 된다고 하지만 중간 번호가 3자리면?</p><p><img src="https://user-images.githubusercontent.com/49426352/140048549-f1ef18b5-e47c-4f64-b22e-c83cc2ce2bac.png" alt="KakaoTalk_20211103_195405923"></p><p>그러면 4자리 이니깐 XXX- 이런식으로 들어가고 마지막은 XXX 이런식으로 오류가 생기는게 뻔하다. </p><p>처음에는 그것을 막는다고 번호를 배열로 바꾸고 그 길이를 저장하고 날리를 쳤지만 검색해보니 위와 같은 결과가 나와서 이제는 그냥 subString로 처리 하기로 했다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85/">트러블슈팅</category>
      
      
      <comments>http://dudqls5271.github.io/2021/11/03/hexo_Trouble_2021.10.21/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>전자정부 프레임워크 CRUD 자동 생성 기능</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_ev/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_ev/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;p&gt;얼마전에 전자정부표준프레임워크 강의을 듣고온 회사 사람이 알려준 것 이다.&lt;br&gt;이 말을 듣고서 한번 프로젝트에 적용해봤는데 진짜 지금까지 했던 것들이 한번에 만들어지고 지금까지 프로젝트 찾아가면서 만들었던 시간이 아까울 정도이다.&lt;/p&gt;
&lt;p&gt;하지만 가만히 생각하보면 이런식으로 계속 CURD을 난발 하다가는 나의 실력이 늘지 않을거 같은 느낌이 들어 요즘은 급한 작업이 아닌이상 사용하지 않는 추세이다.&lt;/p&gt;
&lt;p&gt;우선 이클립스를 실행 시키면 우측 위에 화면처럼 eGov가 있는지 확인해준다.&lt;br&gt;만약 없다면&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>얼마전에 전자정부표준프레임워크 강의을 듣고온 회사 사람이 알려준 것 이다.<br>이 말을 듣고서 한번 프로젝트에 적용해봤는데 진짜 지금까지 했던 것들이 한번에 만들어지고 지금까지 프로젝트 찾아가면서 만들었던 시간이 아까울 정도이다.</p><p>하지만 가만히 생각하보면 이런식으로 계속 CURD을 난발 하다가는 나의 실력이 늘지 않을거 같은 느낌이 들어 요즘은 급한 작업이 아닌이상 사용하지 않는 추세이다.</p><p>우선 이클립스를 실행 시키면 우측 위에 화면처럼 eGov가 있는지 확인해준다.<br>만약 없다면</p><span id="more"></span><p style="color:red">window -> perpective -> open Perpective -> othe</p> 에서 eGovFrame을 추가해준다.<p>그러면 추가가 된것을 볼 수 있을 것이다.<br>이제 다음과 같이 설정을 해준다.<br><img src="https://user-images.githubusercontent.com/49426352/135825158-2a2acd49-0351-401c-8ab2-9340b3e8b59d.png" alt="화면 캡처 2021-10-04 180721"></p><p>그 다음으로 Data Source Explorer 탭으로 이동한다.<br><img src="https://user-images.githubusercontent.com/49426352/135826709-3ca70678-0f32-40bd-9bb2-432e8c478655.png" alt="화면 캡처 2021-10-04 181504"><br>New을 통해서 새로 만들어준다.<br><img src="https://user-images.githubusercontent.com/49426352/135826715-9d6831d6-9dc0-4395-a973-dba2ded14938.png" alt="화면 캡처 2021-10-04 181603"><br>여기서는 DB을 골라준후<br><img src="https://user-images.githubusercontent.com/49426352/135826721-4d1583f0-13db-4a14-9496-c32b8ff4474b.png" alt="화면 캡처 2021-10-04 181629"><br>드라이버가 없으면 추가을 해주고 맞는 드라이버를 선택해준다.<br><img src="https://user-images.githubusercontent.com/49426352/135826722-b8ab79a5-c14d-4b31-91d2-41fc618724fc.png" alt="화면 캡처 2021-10-04 181644"><br>jar List를 클릭해 주고 Add JAR/ZIP을 클릭해 준다.<br><img src="https://user-images.githubusercontent.com/49426352/135826725-f2e0a923-a124-4f6f-a05a-fe43cbe4609c.png" alt="화면 캡처 2021-10-04 181747"><br>그러면 다음과 같이 선택해준 DB가 추가가 된것을 볼 수있을 것이다.</p><p>그 다음에 CRUD을 클릭후 아까 본인이 선택해준 DB을 선택후 어떠한 Table에 해한 CRUD을 만들어 줄지 선택을 해준다.<br><img src="https://user-images.githubusercontent.com/49426352/135826741-d39d68ed-f2af-40a0-98af-dbec886b5e22.png" alt="화면 캡처 2021-10-04 181944"><br><img src="https://user-images.githubusercontent.com/49426352/135826744-bb4a79b0-4141-43aa-9ad5-edb4932e5023.png" alt="화면 캡처 2021-10-04 182003"><br>그 전에 각각의 DAO, service 등은 미리 만들어 줘야 한다.<br><img src="https://user-images.githubusercontent.com/49426352/135826726-195631b6-d3cf-4d68-be01-ba68b999c850.png" alt="화면 캡처 2021-10-04 181841"><br>그 다음에 작성자, 작성일 등등을 입력해주면 된다.<br><img src="https://user-images.githubusercontent.com/49426352/135826746-76cc24f8-15b9-4304-ad9e-87d355d54de3.png" alt="화면 캡처 2021-10-04 182039"><br>확인버튼을 누르면 다음과 같이 만들어지는 모습을 볼 수 있을 것이다.<br><img src="https://user-images.githubusercontent.com/49426352/135826751-02aec8f3-d230-4727-a9a2-b257b4fd08bc.png" alt="화면 캡처 2021-10-04 182101"></p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/%EC%A0%84%EC%9E%90%EC%A0%95%EB%B6%80%ED%91%9C%EC%A4%80%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/">전자정부표준프레임워크</category>
      
      <category domain="http://dudqls5271.github.io/tags/CRUD/">CRUD</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_ev/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo - 검색엔진 최적화</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_goole/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_goole/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;검색-엔진-최적화-SEO&quot;&gt;&lt;a href=&quot;#검색-엔진-최적화-SEO&quot; class=&quot;headerlink&quot; title=&quot;검색 엔진 최적화(SEO)&quot;&gt;&lt;/a&gt;검색 엔진 최적화(SEO)&lt;/h2&gt;&lt;p&gt;블로그 생성 후 내가 작성한 포스트가 검색에 노출되기 위해서는 검색엔진에 노출 될 수 있도록 검색 엔진 최적화 작업을 진행해 주어야 한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;검색 엔진 최적화(search engine optimization, SEO)는 웹 페이지 검색엔진이 자료를 수집하고 순위를 매기는 방식에 맞게 웹 페이지를 구성해서 검색 결과의 상위에 나올 수 있도록 하는 작업을 말한다. 웹 페이지와 관련된 검색어로 검색한 검색 결과 상위에 나오게 된다면 방문 트래픽이 늘어나기 때문에 효과적인 인터넷 마케팅 방법 중의 하나라고 할 수 있다. 기본적인 작업 방식은 특정한 검색어를 웹 페이지에 적절하게 배치하고 다른 웹 페이지에서 링크가 많이 연결되도록 하는 것이다. 구글 등장 이후 검색 엔진들이 콘텐츠의 신뢰도를 파악하는 기초적인 지표로 다른 웹사이트에 얼마나 인용되었나를 사용하기 때문에 타 사이트에 인용되는 횟수를 늘리는 방향으로 최적화 한다.&lt;br&gt;&lt;/br&gt; &lt;b&gt;위키백과검색&lt;/b&gt; 엔진 최적화&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;검색엔진-최적화-SEO-에-유용한-플러그인-설치&quot;&gt;&lt;a href=&quot;#검색엔진-최적화-SEO-에-유용한-플러그인-설치&quot; class=&quot;headerlink&quot; title=&quot;검색엔진 최적화(SEO)에 유용한 플러그인 설치&quot;&gt;&lt;/a&gt;검색엔진 최적화(SEO)에 유용한 플러그인 설치&lt;/h2&gt;&lt;p&gt;HEXO에서는 SEO와 관련된 다양한 플로그인들이 있으며 그 중 몇 가지를 이용할 수 있도록 정리해 보았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexo-auto-canonical&lt;/li&gt;
&lt;li&gt;hexo-generator-robotstxt&lt;/li&gt;
&lt;li&gt;hexo-autonofollow&lt;/li&gt;
&lt;li&gt;hexo-generator-feed&lt;/li&gt;
&lt;li&gt;hexo-generator-seo-friendly-sitemap&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save hexo-auto-canonical&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;사용&lt;br&gt;– 설치한 테마 내 HEAD태그 내 삽입해서 사용한다.&lt;br&gt;– 보통 &lt;b style=&quot;color: red&quot;&gt;themes &amp;gt; 본인 테마 이름 -&amp;gt; layout -&amp;gt; common -&amp;gt; head.ejs&lt;/b&gt;&lt;br&gt;– 만약 위의 위치에 없으면 VS 코드 기준으로 &lt;b style=&quot;color: red&quot;&gt;Control + P&lt;/b&gt;을 눌러서 head.ejs를 검색해보자&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;head.ejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;%- autoCanonical(config, page) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="검색-엔진-최적화-SEO"><a href="#검색-엔진-최적화-SEO" class="headerlink" title="검색 엔진 최적화(SEO)"></a>검색 엔진 최적화(SEO)</h2><p>블로그 생성 후 내가 작성한 포스트가 검색에 노출되기 위해서는 검색엔진에 노출 될 수 있도록 검색 엔진 최적화 작업을 진행해 주어야 한다.</p><blockquote><p>검색 엔진 최적화(search engine optimization, SEO)는 웹 페이지 검색엔진이 자료를 수집하고 순위를 매기는 방식에 맞게 웹 페이지를 구성해서 검색 결과의 상위에 나올 수 있도록 하는 작업을 말한다. 웹 페이지와 관련된 검색어로 검색한 검색 결과 상위에 나오게 된다면 방문 트래픽이 늘어나기 때문에 효과적인 인터넷 마케팅 방법 중의 하나라고 할 수 있다. 기본적인 작업 방식은 특정한 검색어를 웹 페이지에 적절하게 배치하고 다른 웹 페이지에서 링크가 많이 연결되도록 하는 것이다. 구글 등장 이후 검색 엔진들이 콘텐츠의 신뢰도를 파악하는 기초적인 지표로 다른 웹사이트에 얼마나 인용되었나를 사용하기 때문에 타 사이트에 인용되는 횟수를 늘리는 방향으로 최적화 한다.<br></br> <b>위키백과검색</b> 엔진 최적화</p></blockquote><h2 id="검색엔진-최적화-SEO-에-유용한-플러그인-설치"><a href="#검색엔진-최적화-SEO-에-유용한-플러그인-설치" class="headerlink" title="검색엔진 최적화(SEO)에 유용한 플러그인 설치"></a>검색엔진 최적화(SEO)에 유용한 플러그인 설치</h2><p>HEXO에서는 SEO와 관련된 다양한 플로그인들이 있으며 그 중 몇 가지를 이용할 수 있도록 정리해 보았다.</p><ul><li>hexo-auto-canonical</li><li>hexo-generator-robotstxt</li><li>hexo-autonofollow</li><li>hexo-generator-feed</li><li>hexo-generator-seo-friendly-sitemap</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-auto-canonical</span><br></pre></td></tr></table></figure><ul><li>사용<br>– 설치한 테마 내 HEAD태그 내 삽입해서 사용한다.<br>– 보통 <b style="color: red">themes &gt; 본인 테마 이름 -&gt; layout -&gt; common -&gt; head.ejs</b><br>– 만약 위의 위치에 없으면 VS 코드 기준으로 <b style="color: red">Control + P</b>을 눌러서 head.ejs를 검색해보자</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">head.ejs</span><br><span class="line">  &lt;%- autoCanonical(config, page) %&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="hexo-generator-robotstxt"><a href="#hexo-generator-robotstxt" class="headerlink" title="hexo-generator-robotstxt"></a>hexo-generator-robotstxt</h2><p>자동으로 robot.txt 파일을 생성해주는 플러그인 이다.</p><blockquote><p>로봇 배제 표준은 웹 사이트에 로봇이 접근하는 것을 방지하기 위한 규약으로, 일반적으로 접근 제한에 대한 설명을 robots.txt에 기술한다. 이 규약은 권고안이며, 로봇이 robots.txt 파일을 읽고 접근을 중지하는 것을 목적으로 한다. 따라서, 접근 방지 설정을 하였다고 해도, 다른 사람들이 그 파일에 접근할 수 있다. robots.txt 파일은 항상 사이트의 루트 디렉토리에 위치해야 한다.<br><b>위키백과로봇 배제</b> 표준</p></blockquote><ul><li>설치</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-robotstxt --save</span><br></pre></td></tr></table></figure><ul><li>사용<br>이것도 자신의 theme의 _config.yml에 넣어주면 된다.</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exclude1.com</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exclude2.com</span></span><br></pre></td></tr></table></figure><h2 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h2><ul><li>자동으로 RSS feed를 생성해주는 플러그인 이다.</li></ul><blockquote><p>어떤 사이트가 있을 때, 그 사이트를 매일 방문해서 재미있는 새로운 기사가 있는지 확인하는 것은 번거롭습니다. 특히 새 기사가 매일 또는 정기적으로 올라오는 것이 아니라 불규칙할 때는 더욱 그렇습니다.<br>그 사이트를 직접 방문하지 않고, 새 기사들만 자신의 컴퓨터로 “배달”이 된다면 편리할 것입니다.<br>RSS(Really Simple Syndication 의 약자) 같은 “사이트 피드”란, 새 기사들의 제목만, 또는 새 기사들 전체를 뽑아서 하나의 파일로 만들어 놓은 것입니다.<br>이제 각 사이트들에서 제공하는 RSS파일 주소만 수집하여 확인하면, 자신의 취향에 맞는 새로운 읽을거리를 쉽게 찾아서 읽을 수 있습니다.<br>그러나 모든 사이트에서 RSS피드를 제공하는 것은 아닙니다. 1년 내내 새로운 내용이 없는 정적인 사이트에서는 제공하지 않는 것이 보통입니다. 새로운 읽을거리가 자주 올라오는 “뉴스형”, “블로그형” 사이트에서 주로 제공됩니다.</br> <b>RSS Feed</b></p></blockquote><ul><li>설치</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><ul><li>사용</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rss2</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">rss2.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="검색엔진-등록하기"><a href="#검색엔진-등록하기" class="headerlink" title="검색엔진 등록하기"></a>검색엔진 등록하기</h2><ul><li><p><a href="https://analytics.google.com/">구글 애널리틱스</a>(Google Analytic)</p><ul><li>위 사이트에서 가입을 하고 <b>이름과 URL</b>을 입력하고 <b>추척ID</b>를 발급 받는다. </br> 이 아이디는 themes의 <span style="color: red">_config.yml</span> 내 <span style="color: red">google_analytics</span>에 넣어 준다.</li></ul></li></ul><p>가입이 완료 되면 다음과 같은 화면이 나오는것을 보게 될 것이다.<br><img src="https://user-images.githubusercontent.com/49426352/120660092-f0a4da80-c4c1-11eb-8de1-2425caf96246.png" alt="화면 캡처 2021-06-03 230347"><br>설정에 들어가면 나는 미리 만들어 놓은것들이 있어서 이렇게 뜨는데 처음 만드는 사람들은 다음과 같이 뜨지 않을것이다.<br>위에 <b>계정 만들기</b>을 눌러서 계정을 만들어 준다.<br><img src="https://user-images.githubusercontent.com/49426352/120661993-bb998780-c4c3-11eb-811c-0a5dadfc15e2.png" alt="화면 캡처 2021-06-03 232412"><br>계정을 다 만들었다면 홈-&gt; 검색창에 <b style="color:red">“추적 코드”</b> 을 검색해준다.<br>그러면 측정ID 탭이 나오는데 그걸을 클릭해서 들어가준다.</p><p><img src="https://user-images.githubusercontent.com/49426352/120663571-18497200-c4c5-11eb-9c1e-7e8a72bfa526.png" alt="화면 캡처 2021-06-03 232755"><br>측정 ID을 클릭해주고<br><img src="https://user-images.githubusercontent.com/49426352/120665295-9a866600-c4c6-11eb-81ca-fa1466ec0b6f.png" alt="화면 캡처 2021-06-03 234231"><br>네모칸 쪽을 클릭해주면<br><img src="https://user-images.githubusercontent.com/49426352/120665300-9b1efc80-c4c6-11eb-97e8-b94ab3fb05b4.png" alt="화면 캡처 2021-06-03 234419"><br>다음과 같은 스크립트 코드가 나오게 된다.<br><img src="https://user-images.githubusercontent.com/49426352/120665303-9bb79300-c4c6-11eb-8ddd-3824cea3d006.png" alt="화면 캡처 2021-06-03 234929"><br>이 스크립트 코드를 head.ejs에 붙어 넣어주면 된다.<br>이 과정을 진행하면 확인 하는데 2~3일 정도 걸린다. -끝-</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/hexo/">hexo</category>
      
      <category domain="http://dudqls5271.github.io/tags/SEO/">SEO</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_goole/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Github Page와 Hexo로 블로그 만들고 테마 적용하기</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_install/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_install/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;p&gt;JAVA온라인스터디를 하면서 사람들이 Github로 블로그를 만드는 것을 보고 신기해서 만들게 되었다.&lt;br&gt;조금 검색 해보니깐 Github는 Github Pages애 블로그를 만들어 볼려고 한다. 조금 구글에서 검색해보니깐 대부분 hexo?을 많이 사용한다고 하길래 나도 한번 hexo을 이용해서 블로그를 만들어 볼려고 한다.&lt;/p&gt;
&lt;h3 id=&quot;기본-설치-프로그램&quot;&gt;&lt;a href=&quot;#기본-설치-프로그램&quot; class=&quot;headerlink&quot; title=&quot;기본 설치 프로그램&quot;&gt;&lt;/a&gt;기본 설치 프로그램&lt;/h3&gt;&lt;p&gt;vscode와 NodeJS을 깔아주었다.&lt;br&gt;&lt;a href=&quot;https://code.visualstudio.com/download&quot;&gt;vscode&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/ko/&quot;&gt;NodeJS&lt;/a&gt; 다운 링크&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/49426352/117543472-09070e00-b058-11eb-8d5e-d3ffd3693707.png&quot; alt=&quot;p2&quot;&gt;&lt;/p&gt;
&lt;p&gt;NodeJs는 다음과 같이 cmd에 Node라고 처주면 설치확인이 가능하다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>JAVA온라인스터디를 하면서 사람들이 Github로 블로그를 만드는 것을 보고 신기해서 만들게 되었다.<br>조금 검색 해보니깐 Github는 Github Pages애 블로그를 만들어 볼려고 한다. 조금 구글에서 검색해보니깐 대부분 hexo?을 많이 사용한다고 하길래 나도 한번 hexo을 이용해서 블로그를 만들어 볼려고 한다.</p><h3 id="기본-설치-프로그램"><a href="#기본-설치-프로그램" class="headerlink" title="기본 설치 프로그램"></a>기본 설치 프로그램</h3><p>vscode와 NodeJS을 깔아주었다.<br><a href="https://code.visualstudio.com/download">vscode</a>, <a href="https://nodejs.org/ko/">NodeJS</a> 다운 링크</p><p><img src="https://user-images.githubusercontent.com/49426352/117543472-09070e00-b058-11eb-8d5e-d3ffd3693707.png" alt="p2"></p><p>NodeJs는 다음과 같이 cmd에 Node라고 처주면 설치확인이 가능하다.</p><span id="more"></span><h3 id="1-레포지터리-만들기"><a href="#1-레포지터리-만들기" class="headerlink" title="1. 레포지터리 만들기"></a>1. 레포지터리 만들기</h3><p>우선 github에 새로운 레포지터리를 만들어 준다.<br><img src="https://user-images.githubusercontent.com/49426352/117542272-e9b9b200-b052-11eb-9ab4-2cbaae5240e8.png" alt="p1"></p><p>여기서 중요한것은 “자신의Github로ID”.githud.io로 만들어줘야 한다는 점이다.<br>나의 Github로 보자면 dudqls5271.github.io가 되는것이다.</p><h3 id="2-hexo-설치"><a href="#2-hexo-설치" class="headerlink" title="2. hexo 설치"></a>2. hexo 설치</h3><p>다음 사진과 같이 입력 해주면 hexo 기본설치가 시작 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/49426352/117543483-14f2d000-b058-11eb-90ee-848b32980972.png" alt="화면 캡처 2021-05-08 233126"></p><p>설치가 완료 되면 다음과 같이 여러개의 폴더 들이 생긴 것을 볼 수가 있다.</p><p>마지막으로 아래을 입력해주면 hexo에 필요한 파일들이 설치가 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/49426352/117543494-1cb27480-b058-11eb-87b3-c6412440b3b2.png" alt="화면 캡처 2021-05-08 233215"></p><h3 id="3-테마-설정"><a href="#3-테마-설정" class="headerlink" title="3. 테마 설정"></a>3. 테마 설정</h3><p>다음은 테마 설정이다.<br>테마는 다른 사람들이 만들어 준 테마를 사용하면된다. <a href="https://code.visualstudio.com/download">[여기]</a>서 테마를 고를수 있다.<br>원하는 테마를 고른뒤 그 사람의 Github에 들어가서 URL을 복사 해준뒤 다음과 같이 콘솔에 적어주면 된다.</p><p><img src="https://user-images.githubusercontent.com/49426352/117543513-2936cd00-b058-11eb-96ae-377f08cbf7d1.png" alt="화면 캡처 2021-05-08 234329"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes</span><br><span class="line">$ git <span class="built_in">clone</span> 링크</span><br></pre></td></tr></table></figure><p>그러면 themes에 추가가 된것을 볼 수 있을것이다.<br>에제 theme을 본인 마음대로 바꿔주면 된다.</p><h3 id="4-기본-정보-수정"><a href="#4-기본-정보-수정" class="headerlink" title="4. 기본 정보 수정"></a>4. 기본 정보 수정</h3><blockquote><p><a href="https://hexo.io/docs/">여기</a> 에서 다양한 옵션을 볼 수 있습니다!</p></blockquote><h3 id="4-1-site-기본-정보-수정"><a href="#4-1-site-기본-정보-수정" class="headerlink" title="4-1. site 기본 정보 수정"></a>4-1. site 기본 정보 수정</h3><p>_config.yml에 들어가면 site 가 있을 것입니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: YB_BIN Blog</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author:</span><br><span class="line">language:</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p>위의 부분을 찾아서 원하는대로 수정하면 된다.<br>나 같은 경우는 다음과 같이 수정다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: YB_BIN Blog</span><br><span class="line">subtitle: <span class="string">&#x27;개인 공부 및 작업물 공유&#x27;</span></span><br><span class="line">description: <span class="string">&quot;YB_BIN의 블로그 입니다.&quot;</span></span><br><span class="line">keywords: programming, java, html, web, front</span><br><span class="line">email: youngbin5271@gmail.com</span><br><span class="line">author: <span class="string">&#x27;LEE YoungBin&#x27;</span></span><br><span class="line">language: ko</span><br><span class="line">timezone: <span class="string">&#x27;Asia/Seoul&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-URL-정보-수정"><a href="#4-2-URL-정보-수정" class="headerlink" title="4-2. URL 정보 수정"></a>4-2. URL 정보 수정</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line">github.io/project</span><br><span class="line">url: http://example.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span></span><br><span class="line">  trailing_html: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>라고 되어있는데, 여기서 url에 자신의 Github 유저명을 넣어서 <a href="http://username.github.io을/">http://username.github.io을</a> 넣어주면 된다!</p><p>나는 다음과 같이 수정 했다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line">github.io/project</span><br><span class="line">url: http://dudqls5271.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span></span><br><span class="line">  trailing_html: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="4-3-Deploy-설정3"><a href="#4-3-Deploy-설정3" class="headerlink" title="4-3. Deploy 설정3"></a>4-3. Deploy 설정3</h3><p>이 항목에 본인의 Gitpage Repository 정보를 넣어서 수정해주면 된다.<br>여기도 username 바꿔줘야 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/dudqls5271/dudqls5271.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="5-hexo-테스트"><a href="#5-hexo-테스트" class="headerlink" title="5. hexo 테스트"></a>5. hexo 테스트</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo s 도 가능하다.</p></blockquote><p>위의 문구를 콘솔에 치면 서버가 열렸다는 문구와 같이 <a href="http://localhost:4000/">http://localhost:4000</a> 가 열릴 것이다.<br>여기에 들어가면 본인이 설정한 블로그를 볼 수 있습니다.</p><h3 id="6-Github에-배포하기"><a href="#6-Github에-배포하기" class="headerlink" title="6. Github에 배포하기"></a>6. Github에 배포하기</h3><p>이제 지금 까지 만든 Hexo 블로그를 Github로 배포를 해보자.<br>아까 Hexo을 설치하던 콘솔 창을 다시 열어 준다.</p><p>아래의 두 명령어를 입력해서 생성, 배포해준다.</p><h3 id="Hexo를-이용해-정적-웹-리소스-생성하기"><a href="#Hexo를-이용해-정적-웹-리소스-생성하기" class="headerlink" title="Hexo를 이용해 정적 웹 리소스 생성하기"></a>Hexo를 이용해 정적 웹 리소스 생성하기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo g도 가능하다.</p></blockquote><h3 id="github에-배포하기"><a href="#github에-배포하기" class="headerlink" title="github에 배포하기"></a>github에 배포하기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>줄여서 hexo d도 가능하다.</p></blockquote><blockquote><p>이 두가지를 합쳐서 <br> hexo generate -deploy 혹은 hexo g -d로 사용가능하다.</p></blockquote><p>혹시라도 배포시</p><blockquote><p>ERROR Deployer not found: git<br></p></blockquote><p>라는 오류 문구가 나오면</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>를 통해서 플러그인을 다시 설피 해준다.</p><p>여기까지 하면 <a href="https://username.github.io로/">https://username.github.io로</a> 들어가보면 hexo 페이지가 보일 것 이다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/hexo/">hexo</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_install/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 5.논리 연산자.</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_java06/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_java06/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;논리-연산자-amp-amp&quot;&gt;&lt;a href=&quot;#논리-연산자-amp-amp&quot; class=&quot;headerlink&quot; title=&quot;논리 연산자 - &amp;amp;&amp;amp;, ||, !&quot;&gt;&lt;/a&gt;논리 연산자 - &amp;amp;&amp;amp;, ||, !&lt;/h2&gt;&lt;p&gt;논리 연산자는 ‘&amp;amp;&amp;amp;’는 우리말로 그리고(AND)에 해당하며, 두 피연샂자가 모두 true일 떄 만 true를 결과로 얻는다. ‘||’는 또는(OR)에 해당하며, 두 피연산자 중 어느 한쪽 만 true이여도 true를 결과로 얻는다. 그리고 논리 연산자는 피연산자로 boolean형 또는 boolean형 값을 결과로 하는 조건식만 허용한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;|| (OR결합) 피연산자 중 어느 한쪽 truen이면 true를 결과로 얻는다.&lt;br&gt;&amp;amp;&amp;amp; (AND결합) 피연산자 중 양쪽 모두 true이어야 true를 결과로 얻는다.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="논리-연산자-amp-amp"><a href="#논리-연산자-amp-amp" class="headerlink" title="논리 연산자 - &amp;&amp;, ||, !"></a>논리 연산자 - &amp;&amp;, ||, !</h2><p>논리 연산자는 ‘&amp;&amp;’는 우리말로 그리고(AND)에 해당하며, 두 피연샂자가 모두 true일 떄 만 true를 결과로 얻는다. ‘||’는 또는(OR)에 해당하며, 두 피연산자 중 어느 한쪽 만 true이여도 true를 결과로 얻는다. 그리고 논리 연산자는 피연산자로 boolean형 또는 boolean형 값을 결과로 하는 조건식만 허용한다.</p><blockquote><p>|| (OR결합) 피연산자 중 어느 한쪽 truen이면 true를 결과로 얻는다.<br>&amp;&amp; (AND결합) 피연산자 중 양쪽 모두 true이어야 true를 결과로 얻는다.</p></blockquote><span id="more"></span><p>논리 연산자의 피연산자가 ‘참(true)’인 경우와 ‘거짓(false)’인 경우의 연산결과를 표로 나타내면 다음과 같다고 할 수 있다.</p><table><thead><tr><th>X</th><th>Y</th><th>X OR Y</th><th>X AND Y</th></tr></thead><tbody><tr><td>true</td><td>true</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>true</td><td>false</td></tr><tr><td>false</td><td>true</td><td>true</td><td>false</td></tr><tr><td>false</td><td>false</td><td>false</td><td>false</td></tr></tbody></table><p>위 표에서 보는 것이 잘 보기 힘들다면 다음 과 같이 생각하면 편 할 것이다.</p><table><thead><tr><th>X</th><th>Y</th><th>X OR Y</th></tr></thead><tbody><tr><td><b>true</b></td><td>true</td><td><b>true</b></td></tr><tr><td><b>true</b></td><td>false</td><td><b>true</b></td></tr></tbody></table><table><thead><tr><th>X</th><th>Y</th><th>X AND Y</th></tr></thead><tbody><tr><td><b>false</b></td><td>true</td><td><b>false</b></td></tr><tr><td><b>false</b></td><td>false</td><td><b>false</b></td></tr></tbody></table><blockquote><p>OR(||)일 때는 x가 true 면 무조건 true<br>AND(&amp;&amp;일 떄는 x가 false면 무조건 false</p></blockquote><h2 id="논리-부정-연산자"><a href="#논리-부정-연산자" class="headerlink" title="논리 부정 연산자 !"></a>논리 부정 연산자 !</h2><p>이 연산자는 피연산자가 true면 false를, false면 true를 결과로 반환한다. 간단히 말해서 true와 false를 반대로 바꾸는 것이다.</p><table><thead><tr><th>X</th><th>!x</th></tr></thead><tbody><tr><td>false</td><td>true</td></tr><tr><td>true</td><td>false</td></tr></tbody></table><h2 id="비트-연산자-amp-lt-lt-gt-gt"><a href="#비트-연산자-amp-lt-lt-gt-gt" class="headerlink" title="비트 연산자 &amp; | ^ ~ &lt;&lt; &gt;&gt;"></a>비트 연산자 &amp; | ^ ~ &lt;&lt; &gt;&gt;</h2><p>비트 연산자는 피연산자를 비트단위로 논리 연산한다. 피연산자를 이진수로 표현했을 때 의 가 자리가 아래의 규칙에 따라 연산을 수행한다. 피연산자로 실수는 허용하지 않는다</p><table><thead><tr><th>X</th><th>Y</th><th>X OR Y</th><th>X AND Y</th><th>X XOR Y</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table><h2 id="비드-전환-연산자"><a href="#비드-전환-연산자" class="headerlink" title="비드 전환 연산자 ~"></a>비드 전환 연산자 ~</h2><p>이 연산자는 피연산자를 2진수로 표연했을때, 0은 1로, 1은 0으로 바꾼다. 논리부전 연산자 “!”와 유사하다.</p><table><thead><tr><th>X</th><th>~x</th></tr></thead><tbody><tr><td>1</td><td>0</td></tr><tr><td>0</td><td>1</td></tr></tbody></table><p>비트 전환 연산자 ~에 의해 ‘비트 전환’되고 아면, 부호있는 타입의 피연산자는 부호가 만대로 변경된다. 즉, 피연산자의 ‘1의 보수’를 얻을 수 있는 것이다. 그래서 비트전환연산자를 ‘1의 보수’연산자라고도 한다.</p><h2 id="쉬프트-연산자-lt-lt-gt-gt"><a href="#쉬프트-연산자-lt-lt-gt-gt" class="headerlink" title="쉬프트 연산자 &lt;&lt; &gt;&gt;"></a>쉬프트 연산자 &lt;&lt; &gt;&gt;</h2><p>이 연산자는 피연산자의 각 자리(2진수로 표연했을 떄)를 ‘오른쪽(&gt;&gt;)’ 또는 ‘왼쪽(&lt;&lt;)’으로 이동한다고 해서 ‘쉬프트연산자’라고 이름을 지었다. 에를 들어 ‘8 &lt;&lt; 2’는 왼쪽 피연산자인 10의 진수 8의 2진수를 왼쪽으로 2자리 이동한다. 이 때, 자리이동으로 저장범위를 벗어난 값들은 버려지고 0으로 채워진다.</p><blockquote><ol><li>10진수 8은 2진수로 ‘00001000’이다.</li><li>‘8 &lt;&lt; 2’은 10진수 8의 2진수를 왼쪽으로 2자리 이동시킨다.</li><li>자리이동으로 인해 저장범위를 벗어난 값은 버려지고, 빈자라는 0으로 채워진다.</li><li>‘8 &lt;&lt; 2’의 결과는 2진수로 ‘00100000’이 된다 (10진수로 32)</li></ol></blockquote><p>‘&lt;&lt;’연산자의 경우, 피연산자의 부호에 상관없이 각 자리를 왼쪽으로 이동시키며 빈칸을 0으로만 채워야 하지만 ‘&gt;&gt;’연산자는 오른쪽으로 이동시키기 때문에 부호있는 정수는 부호를 유지하기 위해 왼쪽 피연산자가 음수인 경우 빈자리를 1로 채운다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/">연산자</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90/">논리 연산자</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EB%B9%84%ED%8A%B8%EC%97%B0%EC%82%B0%EC%9E%90/">비트연산자</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_java06/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Python으로 행맨 게임 만들기</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_pythonHangman/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_pythonHangman/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;p&gt;저번에 과제로 나온 행맨 게임 만들기이다.&lt;br&gt;파이썬에는 랜덤으로 숫자를 만들어주는 함수가 있다고 하는데 나는 만들어 보았다.&lt;/p&gt;
&lt;p&gt;random*Word() 에서는 랜덤으로 숫자를 추출해 Word_list을 뽑는다.&lt;br&gt;그 다음 Word_list에서 랜덤으로 나온 값을 배열 형태로 만들어서 각각 저장을 한다.&lt;br&gt;그리고 word_qust에는 Word_list의 배열의 개수 만큼 *이 있는 배열을 만들어 주는 것이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>저번에 과제로 나온 행맨 게임 만들기이다.<br>파이썬에는 랜덤으로 숫자를 만들어주는 함수가 있다고 하는데 나는 만들어 보았다.</p><p>random*Word() 에서는 랜덤으로 숫자를 추출해 Word_list을 뽑는다.<br>그 다음 Word_list에서 랜덤으로 나온 값을 배열 형태로 만들어서 각각 저장을 한다.<br>그리고 word_qust에는 Word_list의 배열의 개수 만큼 *이 있는 배열을 만들어 주는 것이다.</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">word_list = []</span><br><span class="line">word_qust = []</span><br><span class="line">word_len = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_Word</span>() :</span></span><br><span class="line">    <span class="comment"># 글로벌 변수 생성</span></span><br><span class="line">    <span class="keyword">global</span> word_list</span><br><span class="line">    <span class="keyword">global</span> word_qust</span><br><span class="line">    <span class="keyword">global</span> word_len</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span> :</span><br><span class="line">        <span class="built_in">list</span> = []  <span class="comment"># 리스트생성</span></span><br><span class="line">        rnum = random.randint(<span class="number">0</span>, <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">while</span> rnum <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">                rnum = random.randint(<span class="number">0</span>, <span class="number">8</span>)</span><br><span class="line">            <span class="built_in">list</span>.append(rnum)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">list</span>.sort()</span><br><span class="line"></span><br><span class="line">        Word_list = [<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;actor&quot;</span>, <span class="string">&quot;airplane&quot;</span>, <span class="string">&quot;always&quot;</span>, <span class="string">&quot;animal&quot;</span>, <span class="string">&quot;angry&quot;</span>, <span class="string">&quot;arrive&quot;</span>, <span class="string">&quot;autumm&quot;</span>, <span class="string">&quot;baby&quot;</span>, <span class="string">&quot;maplestory&quot;</span>]</span><br><span class="line">        word_len = <span class="built_in">len</span>(Word_list[<span class="built_in">list</span>[<span class="number">0</span>]])</span><br><span class="line">        random_word = Word_list[<span class="built_in">list</span>[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">        word_list = []</span><br><span class="line">        word_qust = []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 랜덤으로 뽑힌 단어을 리스트화 시키는 것이다.</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> random_word:</span><br><span class="line">            word_list.append(i)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 우선 랜덤으로 뽑힌 단어의 글자 수를 받아와 그 겟수 만큼 _을 word_qust에 저장</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(word_len):</span><br><span class="line">            word_qust.append(<span class="string">&quot;_&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 리스트가 된 word_qust을 print로 출력 여기서</span></span><br><span class="line">        <span class="comment"># end =&quot; &quot; 는 프린트로 출력 될때 줄바 꿈을 공백으로 변경하는 것이다.</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> word_qust:</span><br><span class="line">            <span class="built_in">print</span>(i, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>try_num는 남은 횟수를 저장하는 변수 이다.</p><p>처음에 user_ch에 알파벳을 입력 해주면<br>for문을 통해 word_list와 비교를 한다.</p><p>만약에 사용자가 입력한 값과 word_list와 같다면<br>해당 word_list의 값을 *로변경해준다.</p><p>그다음은 try_num -1, score + 1 이된다.<br>try_num은 위에서 언급 했던 그대로의 의미 이고 score은 현제 정답의 개수을 의미한다.</p><p>만약 try_num이 0이 되면 게임은 처음부터 시작하고<br>score가 word_len과 같으면 게임은 정답으로 종료가 되고 새로운 게임이 시작된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ex</span>():</span></span><br><span class="line">    try_num = <span class="number">10</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;현제 남은 횟수는 &quot;</span> + <span class="built_in">str</span>(try_num) + <span class="string">&quot;번 입니다.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    score = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        user_ch = <span class="built_in">input</span>(<span class="string">&quot;알파벳을 입력해주세요 &gt; &quot;</span>)</span><br><span class="line">        <span class="comment"># 입력 받은 input을 word_list랑 비교 한다.</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> word_list:</span><br><span class="line">            <span class="comment"># 만약에 사용자가 입력한 값이 word_list에 있는 값과 같으면</span></span><br><span class="line">            <span class="comment"># *로 처리하는 과정을 적은것이다.</span></span><br><span class="line">            <span class="comment"># 이거는 중복되는 글자들을 무시하기 위한것이다.</span></span><br><span class="line">            <span class="keyword">if</span> user_ch == i:</span><br><span class="line">                word_qust[word_list.index(i)] = user_ch</span><br><span class="line">                word_list[word_list.index(i)] = <span class="string">&quot;*&quot;</span></span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> word_qust:</span><br><span class="line">                    <span class="built_in">print</span>(k, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;정답 입니다.&quot;</span>)</span><br><span class="line">                score = score + <span class="number">1</span></span><br><span class="line">                try_num = try_num - <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;현제 남은 횟수는 &quot;</span> + <span class="built_in">str</span>(try_num) + <span class="string">&quot;번 입니다.&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> user_ch != i:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;틀렸습니다.&quot;</span>)</span><br><span class="line">                try_num = try_num - <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;현제 남은 횟수는 &quot;</span> + <span class="built_in">str</span>(try_num) + <span class="string">&quot;번 입니다.&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 횟수가 0이 되면 게임이 끝나고 다음 문제가 나온다.</span></span><br><span class="line">        <span class="keyword">if</span> try_num == <span class="number">0</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;아웃 입니다.&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;다음 문제 나옵니다.&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> score == word_len:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;정답입니다!&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>main에는 while True로 무한 반복 되도록 만들었다.<br>만약 게임이 끝나도 바로 다음 게임이 시작되도록 설계한것이다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        random_Word()</span><br><span class="line">        ex()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/python/">python</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_pythonHangman/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 3.연산자(operater)</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAVA04/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAVA04/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;p&gt;연산자는 ‘연산을 수행하는 기호’를 말한다. 예를 들어서 ‘+’기호는 덧셈을 연산을 수행하며,&lt;br&gt;‘덧샘 얀산자’라고한다. 자바에서는 사칙연산(+, -, *, /)을 비롯해서 다양한 연산자들을 제공한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>연산자는 ‘연산을 수행하는 기호’를 말한다. 예를 들어서 ‘+’기호는 덧셈을 연산을 수행하며,<br>‘덧샘 얀산자’라고한다. 자바에서는 사칙연산(+, -, *, /)을 비롯해서 다양한 연산자들을 제공한다.</p><span id="more"></span><h2 id="1-연산자와-피연산자"><a href="#1-연산자와-피연산자" class="headerlink" title="1 연산자와 피연산자"></a>1 연산자와 피연산자</h2><p>연산자가 연산을 수행하려면 반드시 연산의 대상이 있어야하는데, 이것을 ‘피연산자(operand)’ 라고 한다. 피연산자로 상수, 변수 또는 식 등을 사용 할 수 있다.</p><blockquote><p>연산자(operator) 연산을 수행하는 기호(+, -, *, /)<br>피연산다(operand) 연산자의 작업 대상(변수, 상수, 리터럴, 수식)</p></blockquote><p>다음과 같이 ‘x + 3’ 이라는 식이 있을때 ‘+는 두 피연산자를 더해서 그 결과를 반환 하는 것셈 연산자이고, 변수 x와 상수 3은 연산자의 피연산자이다.</p><h2 id="연산자의-종류"><a href="#연산자의-종류" class="headerlink" title="연산자의 종류"></a>연산자의 종류</h2><p>배워야할 연산자의 개수가 많아서 부담스러울 수 있는데, 기증이 비슷한 것들끼리 묶어놓고 보면 몇 종류 안 된다.</p><table><thead><tr><th>종류</th><th>내용</th><th>설명</th></tr></thead><tbody><tr><td>산술 연산자</td><td>+, -, *, /, %, &lt;&lt;, &gt;&gt;</td><td>사칙 연산(+,-,*,/) 과 나머지 연산자 (%)</td></tr><tr><td>비교 연산자</td><td>&gt;, &lt;, &gt;=, &lt;=, == !=</td><td>크고 작음과 같고 다름을 비교</td></tr><tr><td>논리 연산자</td><td>&amp;&amp;, !, &amp;, ^, ~</td><td>‘그리고(AND)’, 와 또는(OR)으로 조건을 연결</td></tr><tr><td>기 타</td><td>(type) ?: instanceof</td><td>형변환 연산자, 삼항연산자, instanceof연산자</td></tr></tbody></table><p>연산자는 위의 표에서 알 수 있는 거처럼, 크게 산술, 비교, 논리 대입 4가지로 나눌 수 있다. 산술, 비교, 대입 연산자는 이미 알고 있는 걸들이고, 논리 연산자도 쉽게 이해가 될 것이다.</p><h2 id="피연산자의-개수에-의한-분류"><a href="#피연산자의-개수에-의한-분류" class="headerlink" title="피연산자의 개수에 의한 분류"></a>피연산자의 개수에 의한 분류</h2><p>피연산자의 갸수로 연산자를 분류하기도 하는데, 피연산자의 개수가 하나면 <b>“단항연산자”</b>, 두개면 <b>“이항연산자”</b>, 세 개면 <b> “삼항연산자” </b>라고 부른다. 대부분의 연산자는 “이항연산자”이고 삼항 연산자는 오직 “? :” 하나 뿐이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="number">3</span> -<span class="number">5</span></span><br><span class="line"><span class="comment">// 3앞에 있는 -는 부호연산자 이고</span></span><br><span class="line"><span class="comment">//3과 5 사이에 있는 -는 뺄샘 연산자 이다.</span></span><br></pre></td></tr></table></figure><p>위의 식에서는 두 개의 연산자가 포함 되어있는데, 둘다 같은 기호 <b>‘-‘</b>로 나타 내지만 엄연히 다른 연산자 이다.</p><h2 id="산술-변환-usual-arithmetic-conversion"><a href="#산술-변환-usual-arithmetic-conversion" class="headerlink" title="산술 변환(usual arithmetic conversion)"></a>산술 변환(usual arithmetic conversion)</h2><p>이항 연산자는 두 피연산자의 타입이 일치해야 연산이 가능하므로, 피연산자의 타입이 서로 다르다면 연산 전에 형변환 연산자로 타입을 일치 시켜야한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">float</span> f = <span class="number">20.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> result = f + (<span class="keyword">float</span>)i;    <span class="comment">//형변환으로 두 피연산자의 타입이 일치 함</span></span><br></pre></td></tr></table></figure><p>대부분의 경우, 두 피연산자의 타입 중에서 더 큰 타입으로 일피시키는데, 그 이유는 작은 타입으로 형변환하면 원래의 값이 손실될 가능성이 있기 때문이다.</p><p>이처럼 연산 전에 피연산자 타입의 일치를 위해 자동 형변환되는 것을 <b>‘산술변환’</b> 또는 <b>‘일반 산술 변화’</b>이라 하며 , 이 변환은 이항 연산자에서만 아니라 단항 연산자에서도 일어난다.</p><ol><li><p>두 피연산자의 타입을 같게 일치시킨다. (보다 큰 타입으로 일치)</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> + <span class="keyword">int</span> --&gt; <span class="keyword">long</span> + <span class="keyword">long</span> --&gt; <span class="keyword">long</span></span><br><span class="line"><span class="keyword">float</span> + <span class="keyword">int</span> --&gt; <span class="keyword">float</span> + <span class="keyword">float</span> --&gt; <span class="keyword">float</span></span><br><span class="line"><span class="keyword">double</span> + <span class="keyword">float</span> --&gt; <span class="keyword">double</span> + <span class="keyword">double</span> --&gt; <span class="keyword">double</span></span><br></pre></td></tr></table></figure></li><li><p>피연산자의 타입이 int보다 작은 타입이면 int로 변환된다.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> + <span class="keyword">short</span> --&gt; <span class="keyword">int</span> + <span class="keyword">int</span> --&gt; <span class="keyword">int</span></span><br><span class="line"><span class="keyword">char</span> + <span class="keyword">short</span> --&gt; <span class="keyword">int</span> + <span class="keyword">int</span> --&gt; <span class="keyword">int</span></span><br></pre></td></tr></table></figure></li></ol><p>첫번째는 자동현변환은 피연산자의 값손실 을 최소화 하기 위한 것이다. 두번째 규칙은 int가 가장 효율적인 처리할 수 있는 타입이고, int 보다 작은 타입 (short, char)은 표현 범위가 작아서 연산중에 오버풀로우(overflow)가 발생할 가능성이 높기때문에 만들어 진것 이다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAVA04/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 4.증감 연산자.</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAVA05/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAVA05/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;증감-연산자-–&quot;&gt;&lt;a href=&quot;#증감-연산자-–&quot; class=&quot;headerlink&quot; title=&quot;증감 연산자 ++ –&quot;&gt;&lt;/a&gt;증감 연산자 ++ –&lt;/h2&gt;&lt;p&gt;증감연산자는 피연사자에 저장된 값을 1 증가 또는 감소시킨다.&lt;br&gt;증감연산자의 피연산자로 정수와 실수가 모두 가능하지만, 상수는 값을 변경할 수 없으므로 기능하지 않는다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;증감 연산자(++)&lt;br&gt;감소 연산자(–)&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="증감-연산자-–"><a href="#증감-연산자-–" class="headerlink" title="증감 연산자 ++ –"></a>증감 연산자 ++ –</h2><p>증감연산자는 피연사자에 저장된 값을 1 증가 또는 감소시킨다.<br>증감연산자의 피연산자로 정수와 실수가 모두 가능하지만, 상수는 값을 변경할 수 없으므로 기능하지 않는다.</p><blockquote><p>증감 연산자(++)<br>감소 연산자(–)</p></blockquote><span id="more"></span><p>일반적으로 단항 연산자는 피연산자의 왼쪽에 위피하지만, 증감 연산자와(++) 감소연산자(–)는 양쪽 모두 가능하다. 피연산자의 왼쪽에 위치하면 ‘전위형(prefix)’, 오른쪽에 위치하면 ‘후위형(postfix)’ 이라고 한다.</p><h2 id="예제"><a href="#예제" class="headerlink" title="예제"></a>예제</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperatorEx1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">        i++;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        i = <span class="number">5</span>;</span><br><span class="line">        ++ i;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i의 값을 증가시킨 후 출력할 때, 한번은 전위형(++i)을 사용했고, 또 한 번은 후위형 (i++)을 사용했다. 결과를 보면 두 번 모두의 i의 초기값 5에서 1이 증가된 6이 출력됨을 알 수 있다.</p><p>이 경우에는 어떤 수직에 포함된 것이 아니라 단독적으로 사용된 것이기 때문에, 증감연산자(++)를 피연산자의 왼쪽에 사용한 경우 (진위형, ++i)와 오른쪽에 사용할 경우 (후위형, i++)의 차이는 없다.</p><p>그러나 다른 수식에 포함되거나 메서드의 메개변수로 사용된 경우, 즉 단독으로 사용되지 않은 경우 진위형(i++)과 후위형(i++)의 결과는 다르다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    j = i ++;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;j=i++; 실행후, i=&quot;</span> + <span class="string">&quot;, j =&quot;</span> + j);</span><br><span class="line"></span><br><span class="line">    i = <span class="number">5</span>;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;j=++i 실행후, i=&quot;</span> + i + <span class="string">&quot;, j=&quot;</span> + j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>실행결과를 보면 i의 값은 두 경우 모두 1이 증가되어 6이 되지만, j의 값은 그렇지 않다. 식을 계산하기 위해서는 식에 포함된 변수의 값을 읽어 와야 하는데, 전위형은 변수(피연산자)의 값을 먼저 증가시킨 후에 변수의 값을 읽어 오는 번면, 휘위형은 변수의 값을 먼저 읽어온 후에 값을 증가시킨다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">j = ++i;     <span class="comment">//진위형</span></span><br><span class="line"></span><br><span class="line">++i;     <span class="comment">//증가후에</span></span><br><span class="line">j = i;   <span class="comment">//참조에 대입</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">j = i++;    <span class="comment">//후위형</span></span><br><span class="line"></span><br><span class="line">j = i;      <span class="comment">//참조하여 대입 후에</span></span><br><span class="line">i++;        <span class="comment">//증가</span></span><br></pre></td></tr></table></figure><p>다음은 메서드 호출에 증감연산자가 사용된 예제이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arge[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>; j = <span class="number">5</span>;</span><br><span class="line">    System.out.println(i++);</span><br><span class="line">    System.out.println(++j)</span><br><span class="line">    System.out.println(<span class="string">&quot;i = &quot;</span>+ i + <span class="string">&quot;, j = &quot;</span> + j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i는 값이 증가되기 전에 println()으로 i에 저장된 값을 5를 넘겨주고 나서 i의 값이 증가하기 떄문에 5가 출력되고 j의 경우 j에 저장된 값을 증가 시킨 후에 println()에게 값을 넘겨주므로 6이 출력 된다. 결과적으로는 i, j 모두 1씩 증가되어 6이 된다.</p><h2 id="부호-연산자"><a href="#부호-연산자" class="headerlink" title="부호 연산자 + -"></a>부호 연산자 + -</h2><p>부호 연산자 ‘-‘는 피연산자의 부호를 반대로 변경한 결과를 반환한다. 피연산자가 음수명 양수 양수면 음수가 연산의 결과가 된다. 부호연산자의 ‘+’는 하는 일이 없고, 쓰이는 경우도 없다. 부호 연산자는 boolen형과 char형을 제외한 기본형에만 사용할 수 있다. 아래 예제를 보면 이해가 갈 것이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String arge[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = -<span class="number">10</span>;</span><br><span class="line">    i = +i ;</span><br><span class="line">    System.out.println(i);</span><br><span class="line"></span><br><span class="line">    i = -<span class="number">10</span>;</span><br><span class="line">    i = -i;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EC%A6%9D%EA%B0%90%EC%97%B0%EC%82%B0%EC%9E%90/">증감연산자</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EB%B6%80%ED%98%B8%EC%97%B0%EC%82%B0%EC%9E%90/">부호연산자</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAVA05/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>겍채지향 프로그래밍 이란?</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_OOP/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_OOP/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;객채-지향-프로그래밍&quot;&gt;&lt;a href=&quot;#객채-지향-프로그래밍&quot; class=&quot;headerlink&quot; title=&quot;객채 지향 프로그래밍&quot;&gt;&lt;/a&gt;객채 지향 프로그래밍&lt;/h1&gt;&lt;p&gt;객체 지향 프로그래밍(이하 OOP)는 컴퓨터 프로그램을 “객체(Object)”들의 모임으로&lt;br&gt;파악하고자 하는 프로그래밍의 패러다임 중에 하나이다. 각 “객체(Object)” 들은 서로 메시지를&lt;br&gt;주고 받을 수 있으며 데이터를 처리할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;객체-지향-프로그래밍-OOP-의-장점은&quot;&gt;&lt;a href=&quot;#객체-지향-프로그래밍-OOP-의-장점은&quot; class=&quot;headerlink&quot; title=&quot;객체 지향 프로그래밍(OOP)의 장점은&quot;&gt;&lt;/a&gt;객체 지향 프로그래밍(OOP)의 장점은&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;프로그램을 유연하고 변경이 용이하게 만든다.&lt;/li&gt;
&lt;li&gt;프로그램의 개발과 보수를 간편하게 만든다&lt;/li&gt;
&lt;li&gt;직관적인 코드 분석을 가능하게 한다.&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="객채-지향-프로그래밍"><a href="#객채-지향-프로그래밍" class="headerlink" title="객채 지향 프로그래밍"></a>객채 지향 프로그래밍</h1><p>객체 지향 프로그래밍(이하 OOP)는 컴퓨터 프로그램을 “객체(Object)”들의 모임으로<br>파악하고자 하는 프로그래밍의 패러다임 중에 하나이다. 각 “객체(Object)” 들은 서로 메시지를<br>주고 받을 수 있으며 데이터를 처리할 수 있다.</p><h3 id="객체-지향-프로그래밍-OOP-의-장점은"><a href="#객체-지향-프로그래밍-OOP-의-장점은" class="headerlink" title="객체 지향 프로그래밍(OOP)의 장점은"></a>객체 지향 프로그래밍(OOP)의 장점은</h3><ul><li>프로그램을 유연하고 변경이 용이하게 만든다.</li><li>프로그램의 개발과 보수를 간편하게 만든다</li><li>직관적인 코드 분석을 가능하게 한다.</li></ul><span id="more"></span><p>객체 지향 프로그래밍의 중요한 특성은 <strong>_강한 응집력(Strong Cohesion)과 약한 결합력(Weak Coupling)을 지향한다는</strong> 점이다.</p><p><strong>응집력(Strong Cohesion)</strong></p><blockquote><p>프로그램의 한 요소가 특정 목적을 위해 밀접하게 연관된 기능들이 모여서 구현되어 있고, 지나치게 많은 일을 하지 않으면 그것을 응집력이 높다고 표현한다.</p></blockquote><p><strong>결합력(coupling)</strong></p><blockquote><p>프로그램 코드의 한 요소가 다른 것과 얼마나 강력하게 연결되어 있는지, 얼마나 의존적인지를 나타내는 정도. 결합력이 낮다는 것은 한 요소가 다른 요소들과 관계를 크게 맺고 있지 않은 상태를 의미한다.</p></blockquote><p><img src="https://user-images.githubusercontent.com/49426352/118004452-7088ca80-b384-11eb-85bd-46e73b50ef72.jpg" alt="download"></p><p>필드에 몬스터들을 배치하고 싶다.<br>몬스터의 종류는 파랑 버섯, 주황 버섯, 뿔 버섯, 좀비 버섯이 있다.<br>각 몬스터들은 시간이 흐르고 래벨업을 할 수 있다.</p><h3 id="OOP의-기본-구성-요소"><a href="#OOP의-기본-구성-요소" class="headerlink" title="OOP의 기본 구성 요소"></a>OOP의 기본 구성 요소</h3><ul><li><p>클래스(Class)<br>같은 종류의 집단에 속하는 속성과 행위를 정의한 것.<br>다른 클래스와 독립적으로 만들어줘야 한다.<br>위의 예제에서 몬스터의 특성과 행위들을 정의한 객체가 클래스가 될 것이다.</p></li><li><p>객체(Object)<br>클래스의 인스턴스(Instance). 상위 클래스의 속성을 가지고 있으면서 개별적인 특성과<br>행위 (메서드 : Method)또한 가지고 있다.</p></li><li><p>메서드(Method)<br>클래스로부터 생성된 객체를 사용하는 방법. 객체의 속성을 조작하는 데 사용한다.<br>위의 예제에서 각각의 몬스터들이 레벨업을 하는 행위가 메서드(Method)라고 볼 수 있다.</p></li></ul><h1 id="OOP의-특성"><a href="#OOP의-특성" class="headerlink" title="OOP의 특성"></a>OOP의 특성</h1><h3 id="캡슐화-Encapsulation"><a href="#캡슐화-Encapsulation" class="headerlink" title="캡슐화(Encapsulation)"></a>캡슐화(Encapsulation)</h3><p>캡슐화는 객체의 데이터를 외부에서 직접 접근하지 못하게 막고, 함수를 통해서만 조작이 가능한 작업이다.</p><p>몬스터 레벨(Lv)과 같은 경우는 이용자가 입의로 조작하게 만들면 문제가 생길 가능성이 있기에, 그래서 래벨업(LvUp)이라는 함수를 통해서만 레벨업이 가능하도록 해야한다.</p><h3 id="추상화-Abstraction"><a href="#추상화-Abstraction" class="headerlink" title="추상화(Abstraction)"></a>추상화(Abstraction)</h3><p>추상화는 객체들이 가진 공통의 특성들을 파악하고 불필요한 특성들을 제거 하는 과정을 말한다.</p><p>객체들이 가진 동작들을 기준으로 이용자들이 동작만 쉽게 구동할 수 있도록 한다<br>레벨업(LvUp) 메소드를 실행만 하면 Lv이라는 속성을 컨트롤 할 수 있었던 것처럼.</p><p>이러한 추상화 과정을 통해 이용자들은 프로그래머가 만든 객체를 더 쉽게 사용할 수 있게 된다.</p><p>추상화를 할 때 주의할 점은 <b style="color: red">속성 위주가 아닌 동작 위주로 정의 하는 작업을 하는 것</b>이다.</p><p>어떠한 동작과 속성을 정의하고 불필요한 정의들을 삭제하여 이용자가 편리하게 객체를 이용할 수 있도록 구성한 것이 추상화이다.</p><h1 id="객체지향-프로그래밍-VS-클래스-기반-프로그래밍"><a href="#객체지향-프로그래밍-VS-클래스-기반-프로그래밍" class="headerlink" title="객체지향 프로그래밍 VS 클래스 기반 프로그래밍"></a>객체지향 프로그래밍 VS 클래스 기반 프로그래밍</h1><p>클래스 단위 프로그래밍과 객체지향 프로그래밍이 똑같은 내용인지 알고 있는 사람들이 있는데 일부는 맞고 일부는 틀리다.</p><h3 id="엄격한-의미에서-해석"><a href="#엄격한-의미에서-해석" class="headerlink" title="엄격한 의미에서 해석"></a><span style="color:#5058bd;">엄격한 의미에서 해석</span></h3><p>객체지향 프로그래밍은 네가지특징(<em>추상화, 캡슐화, 상속, 다향성</em>)을 골고루 사용해 프로그램을 만드는것을 객체지향이라고 한다. 하지만 클래스 단위 프로그래밍은 이런 객체지향의 특징을 전혀 사용하지 않고 오직 클래스만을 이용해 프로그래밍 하는 방식을 말한다.</p><h3 id="유연한-의미에서-해석"><a href="#유연한-의미에서-해석" class="headerlink" title="유연한 의미에서 해석"></a><span style="color:#5058bd;">유연한 의미에서 해석</span></h3><p>클래스 단위 프로그램을 객체지향 프로그램이라고 부를 수 있는 이유는 클래스를 만들어 프로그래밍 하는 자체에 이미 객체지향 프로그래밍에 포함 되는 구조를 가지고 있다고 한다.</p><table><thead><tr><th>구분</th><th>절차 지향 프로그래밍</th><th>객체 지향 프로그래밍</th></tr></thead><tbody><tr><td><center>처리 방식</center></td><td><center>문제를 여러 개의 함수로 나누어순차적으로 호출하여 처리하는 방식</center></td><td><center>문제를 여러개의 <span style="color:red">객체</span> 단위로 나누어 처리 하는 방식</center></td></tr><tr><td><center>단점</center></td><td><center>오래된 방식이며 협업해서 진행하는 큰 프로젝트에는 적합하지 않음</center></td><td><center>학습 난이도가 눞음. <br>개발자의 활용능력이 중요함</center></td></tr><tr><td><center>장점</center></td><td><center>간단하고 소규모 프로젝트에 용이함.<br> 비교적 배우기 쉬움</center></td><td><center>최근 가장 많이 사용하는 방식임. <br> 협업이 중요한 대형 프로젝트에 적합함<center></td></tr></tbody></table>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      <category domain="http://dudqls5271.github.io/tags/OOP/">OOP</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_OOP/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 7.반복문-for, while, do-while</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAVA08/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAVA08/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;p&gt;반목문은 어떤 작업이 반복적으로 수행되도록 할 떄 사용되며, 반복문의 종류는 for, while, do-while 이정 도 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>반목문은 어떤 작업이 반복적으로 수행되도록 할 떄 사용되며, 반복문의 종류는 for, while, do-while 이정 도 있다.</p><span id="more"></span><h2 id="for문"><a href="#for문" class="headerlink" title="for문"></a>for문</h2><p>for문은 반복 횟수를 알고 있을때 적합하다. 구조가 조금 복잡하면 직관적이라 오히려 이해가 쉽다. 다음 예제를 보면 이해하기가 쉬울거 같다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;for문 예제 &quot;</span> + i + <span class="string">&quot;번째&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위의 예제를 보면 for 안에 총 3종류의 문장?을 볼 수 있다. 이것을 처음 부터 해석해보면 int = 0을 선언하고 i을 5까지 1씩 증가 한다고 본면 된다.</p><p>이것만 봐서 이해가 안가는 사람들을 위해 for문의 구조에대해 적어 보았다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(변수 초기화; 조건식; 증감식;) &#123;</span><br><span class="line">    <span class="comment">//실행할 내용</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="초기화"><a href="#초기화" class="headerlink" title="초기화"></a>초기화</h3><p>여기서 초기화는 반복문에 사용될 변수를 초기화하는 부분이며, 처음에만 수행한다. 보통 변수 하나로 for문을 제어하지만, 둘 이상의 변수가 필요 할 때는 ‘,’(콤마)로 구분 하면 된다.</p><h3 id="조건식"><a href="#조건식" class="headerlink" title="조건식"></a>조건식</h3><p>조건식의 값이 (true)이면 반복을 계속 하고, 거짓(false)이면 반복을 중단한다. for문의 뜻이 ‘~ 하는 동안’이므로 조건식이 ‘참인 동안’ 반복을 계속 한다고 생각하면 쉽다. 반복문을 사용하다보면 블럭{} 내의 문장이 한 번도 수행되지 않거나 영원히 반복되는 ‘무한루프’에 빠지기 쉽다.</p><h3 id="증감식"><a href="#증감식" class="headerlink" title="증감식"></a>증감식</h3><p>반복문을 제어하는 변수의 값을 증가 또는 감소시키는 식이다. 매 반복마다 변수의 값이 증감식에 따라서 변하다가 결국 조건식이 거짓이 되어서 for문을 탈출 하게 된다.</p><h2 id="중첩-for문"><a href="#중첩-for문" class="headerlink" title="중첩 for문"></a>중첩 for문</h2><p>if문 안에 또 다른 if문을 넣을 수 있는 것처럼, for문도 다른 for문을 추가 시키는 것이 가능하다. 그리고 중첩의 횟수는 거의 제한이 없다고 보면 된다. 중첩 for문이라고 하면 빠질수 없는게 바로 별찍기 이다. (이게 은근 개같거든요) 다음과 같은 *모양을 찍어 보겠다.</p><p>*<br>**<br>***<br>****<br>*****</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//생략</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">        System.out.ptint(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.ptintln()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while문"><a href="#while문" class="headerlink" title="while문"></a>while문</h2><p>for문에 비해 while문은 구조가 다르다. if문 처럼 조건식과 블럭 {}만으로 이루어져 있다. 다만 if문과 달리 while문은 조건식이 ‘참(true)인 동안’, 즉 조건식이 거짓이 될 떄까지 블럭{} 내의 문장을 반복한다.<br>참고로 while의 조건문은 생략이 불가능 하다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (조건식) &#123;</span><br><span class="line">    <span class="comment">// 조건식의 연산결과가 참(true)인 동안, 반복될 문장들을 적는다.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do-while문"><a href="#do-while문" class="headerlink" title="do-while문"></a>do-while문</h2><p>do-while문은 변형으로 기본적인 구조는 while문과 같으나 조건식과 블럭{} 의 순서를 바꿔놓은 것이다. 그래서 while문의 조건식의 결과에 따라 블럭{}이 한번도 수행되지 않을 수 있지만, do-while문은 최소한 한번은 수행될 것을 보장 한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 조건식의 연산결과가 참일 때 수행될 문장들을 적는다.</span></span><br><span class="line">&#125; <span class="keyword">while</span> (조선식); &lt;- 끝에 ;을 잊지 않도록 주의한다.</span><br></pre></td></tr></table></figure><h2 id="break문"><a href="#break문" class="headerlink" title="break문"></a>break문</h2><p>break문은 자신이 포함된 가장 가까운 반복문을 벗어나 도록 한다. 주로 while-true문과 함께 같이 쓰이기도 한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="comment">//반복문 내용</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EB%B0%98%EB%B3%B5%EB%AC%B8/">반복문</category>
      
      <category domain="http://dudqls5271.github.io/tags/for/">for</category>
      
      <category domain="http://dudqls5271.github.io/tags/while/">while</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAVA08/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Github Page와 Hexo 유용한 플러그인 설치</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_Plugin/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_Plugin/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;SED&quot;&gt;&lt;a href=&quot;#SED&quot; class=&quot;headerlink&quot; title=&quot;SED&quot;&gt;&lt;/a&gt;SED&lt;/h3&gt;&lt;p&gt;SEO란?:&lt;br&gt;영어로 Search Engine Optimization로 대부분 검색엔진 최적화(SEO)와 관련되어있다.&lt;/p&gt;
&lt;h3 id=&quot;플러그인-설치-or-삭제&quot;&gt;&lt;a href=&quot;#플러그인-설치-or-삭제&quot; class=&quot;headerlink&quot; title=&quot;플러그인 설치 or 삭제&quot;&gt;&lt;/a&gt;플러그인 설치 or 삭제&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;$ npm install -save&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;삭제&quot;&gt;&lt;a href=&quot;#삭제&quot; class=&quot;headerlink&quot; title=&quot;삭제&quot;&gt;&lt;/a&gt;삭제&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;$ npm uninstall&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;hexo-autonofollow&quot;&gt;&lt;a href=&quot;#hexo-autonofollow&quot; class=&quot;headerlink&quot; title=&quot;hexo-autonofollow&quot;&gt;&lt;/a&gt;hexo-autonofollow&lt;/h3&gt;&lt;p&gt;이 플러그인은 rel=”external nofollow” 속성을 추가하여 외부 링크 크롤링을 막아 준다고 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="SED"><a href="#SED" class="headerlink" title="SED"></a>SED</h3><p>SEO란?:<br>영어로 Search Engine Optimization로 대부분 검색엔진 최적화(SEO)와 관련되어있다.</p><h3 id="플러그인-설치-or-삭제"><a href="#플러그인-설치-or-삭제" class="headerlink" title="플러그인 설치 or 삭제"></a>플러그인 설치 or 삭제</h3><blockquote><p>$ npm install -save</p></blockquote><h3 id="삭제"><a href="#삭제" class="headerlink" title="삭제"></a>삭제</h3><blockquote><p>$ npm uninstall</p></blockquote><hr><h3 id="hexo-autonofollow"><a href="#hexo-autonofollow" class="headerlink" title="hexo-autonofollow"></a>hexo-autonofollow</h3><p>이 플러그인은 rel=”external nofollow” 속성을 추가하여 외부 링크 크롤링을 막아 준다고 한다.</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-autonofollow --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nofollow:</span><br><span class="line"><span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">exclude:</span><br><span class="line">- exclude1.com</span><br><span class="line">- exclude2.com</span><br></pre></td></tr></table></figure><h3 id="hexo-auto-canonical"><a href="#hexo-auto-canonical" class="headerlink" title="hexo-auto-canonical"></a>hexo-auto-canonical</h3><p>이 플러그인은 대표 URL을 지정해준다고 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-auto-canonical</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- autoCanonical(config, page) %&gt;</span><br></pre></td></tr></table></figure><p>나는 head.ejs안에 위의 코드를 넣었다, 근데 테마마다 다름으로 주위 해줘야한다.<br>Control + P 을 누르면 파일 검색이 가능하다.</p><h3 id="hexo-generator-seo-friendly-sitemap"><a href="#hexo-generator-seo-friendly-sitemap" class="headerlink" title="hexo-generator-seo-friendly-sitemap"></a>hexo-generator-seo-friendly-sitemap</h3><p>이 플러그인은 더욱 효율적으로 크롤링을 할 수 있도록 사이트맵 xml 파일을 자동으로 생성해 주는 것 이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure><p>_config.yml에 아래 코드를 추가 해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sitemap auto generator</span></span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a>hexo-generator-feed</h3><p>RSS 피드를 만들어서 일종의 블로그 구독기능을 만들어 주는 것이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>_config.yml에 아래 내용을 추가 해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># rss feed auto generator</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: rss2</span><br><span class="line">  path: rss2.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br></pre></td></tr></table></figure><p>각각<br>type : feed의 종류 (atom/rss2) - * 네이버는 atom을 지원하지 않음<br>path : feed가 생성될 경로(default : atom.xml, rss2.xml)<br>limit : 최신 포스트 수 설정 (0 또는 false - 전체 포스트)</p><h3 id="hexo-asset-link-필수-설치"><a href="#hexo-asset-link-필수-설치" class="headerlink" title="hexo-asset-link 필수 설치"></a>hexo-asset-link <em>필수 설치</em></h3><p>말 그래도 이 플러그인은 필수 설치이다.<br>내가 평소에 md파일에 글을 올리때 vs코드를 사용하는데, 이미지를 올릴때는 Github에 들어가서 이미지 파일을 따로 넣어줘야 했는데 이 플러그인을 설치해주면</p><p>md파일이 있는곳에 포스트의 이름과 동의한 폴더를 만들고 이미지를 넣어주면 아래와 같이 나온다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-- _posts/</span><br><span class="line">|   +-- hexo_insatall.md</span><br><span class="line">|   +-- hexo_insatall/</span><br><span class="line">|       +-- Test-Image.png</span><br><span class="line">|       +-- Test-Other-File.pdf</span><br></pre></td></tr></table></figure><p>그러면 이제 이미지에 접근할때</p><p>!”[이미지 설명]”(Test-Image)<br>으로 간단하게 접근이 가능해진다.</p><p>자세한 설명은 <a href="https://www.npmjs.com/package/hexo-asset-link">여기</a>에서 확인할 수 있다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/hexo/">hexo</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_Plugin/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 2. 변수(Variable) 타입</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAJA02/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAJA02/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;변수의-타입&quot;&gt;&lt;a href=&quot;#변수의-타입&quot; class=&quot;headerlink&quot; title=&quot;변수의 타입&quot;&gt;&lt;/a&gt;변수의 타입&lt;/h2&gt;&lt;p&gt;우리가 주로 사용하는 값(data)의 종류(type)는 크게 ‘문자의 숫자’로 나눌 수 있으며, 숫자는 다시 ‘정수와 실수’로 나눌 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="변수의-타입"><a href="#변수의-타입" class="headerlink" title="변수의 타입"></a>변수의 타입</h2><p>우리가 주로 사용하는 값(data)의 종류(type)는 크게 ‘문자의 숫자’로 나눌 수 있으며, 숫자는 다시 ‘정수와 실수’로 나눌 수 있다.</p><span id="more"></span><p><img src="https://user-images.githubusercontent.com/49426352/122957441-e8eb9e00-d3bc-11eb-9601-a1296d08178c.png" alt="그림2"></p><p>이러한 값(data)의 종류(type)에 따라 값이 지정될 공간의 크기와 저장형식을 정의한 것 이 자료형(data type)이다. 자료형에는 문자형(char),정수형(dyte, short, int, long), 실수형 (float, double)등이 있으며, 변수를 선언할 때는 저장하는 값의 특성을 고려하여 가장 알맞은 자료형을 변수의 타입으로 선택하면 된다.</p><h2 id="기본형과-참조형"><a href="#기본형과-참조형" class="headerlink" title="기본형과 참조형"></a>기본형과 참조형</h2><p>자료형은 크게 ‘기본형’과 ‘참조형’ 두 가지로 나눌 수 있는데, <b>기본형 변수는 실제 값(data)을 저장</b>하는 반면, <b>참조형 변수는</b>어떤 값이 저장되어 있는 <b>주소(memory address)를 값으로 갖는다.</b> 자바는 참조형 변수 간의 연산을 할 수 없으므로 실제 연산에 사용되는 것은 모두 기본형 변수 이다.</p><blockquote><ol><li>기본형(primitive type)<br>논리형(boolean), 문자형(char), 정수형(byte, short, int, long), 실수형(float, double)</li><li>참조형(reference type)<br>객체의 주소를 저장한다. 8개의 기본형을 제외한 나머지 타입.</li></ol></blockquote><p>참조형 변수(또는 참조변수)를 선언할 때는 변수의 타입으로 클래스의 이름을 사용하므로 클래스의 이름이 참조변수의 타입이 된다. 그래서 새로운 클래스를 작성한다는 것은 새로운 참조형을 추가하는 셈이다.</p><p>다음은 참조변수를 선언하는 방법이다. 기본형 변수와 같이 변수이름 앞에 타입을 적어 주는데 참조변수의 타입은 클래스의 이름이다.</p><blockquote><p>// 변수의 타입이 기본형이 아닌 것들은 모두 참조변수이다.<br>클래스이름 변수이름;</p></blockquote><p>다음은 Data클래스 타입의 참조변수 today를 선언한 것이다. 참조변수는 null 또는 객체의 주소를 값으로 갖으며 참조변수의 초기화는 다음과 같다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Data객체를 생성해서, 그 주소를 today 저장</span></span><br><span class="line">Data today = <span class="keyword">new</span> data();</span><br></pre></td></tr></table></figure><p>객체를 생성하는 연산자 new의 경과는 생성된 객체의 주소이다. 이 주소가 대입연산자 “=”에 의해서 참조변수 today에 저장되는 것이다. 이제 참조변수 today를 통해서 생성된 객체를 사용할 수 있게 된다.</p><h2 id="상수-constant"><a href="#상수-constant" class="headerlink" title="상수(constant)"></a>상수(constant)</h2><p>‘상수(constant)’는 변수와 마찬가지로 ‘값을 지정할 수 있는 공간’이지만, 변수와 동일하며, 단지 변수의 타입 앞에 키워드 ‘final’을 붙여주기만 하면 된다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 상수 MAX_SPEED을 선언 &amp; 초기화</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_SPEED = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><b>그리고 상수는 반드시 신언과 동시에 초기와해야 하며</b>, 그 이후 부터는 <b> 상수의 값을 변경하는 것이 허용되지 않는다.</b></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_SPEED;        <span class="comment">// 에러. 상수는 선언과 동시에 초기화 해야한다.</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_VALUE = <span class="number">100</span>;  <span class="comment">// OK. 선언와 동시에 초기화했음</span></span><br><span class="line">MAX_VALUE = <span class="number">200</span>;            <span class="comment">// 에러. 상수 값은 변경할 수 없음</span></span><br></pre></td></tr></table></figure><p>상수의 이름은 <b>모두 대문자로 하는 것이 암목적인 관례이며</b> (이건 나도 몰랐네여), <b>여러 단어로 이루어 져있는 경우 ‘_‘로 구분한다.</b></p><h2 id="리터럴-literal"><a href="#리터럴-literal" class="headerlink" title="리터럴(literal)"></a>리터럴(literal)</h2><p>프로그래밍 상의 상수는 ‘값을 한 번 저장하면 변경할 수 없는 저장공간’으로 정의가 되어있기에 이와 구분하기 위해서 상수를 ‘리터럴’이라는 용어를 사용한다.</p><blockquote><p>변수(variable) 하나의 값을 저장하기 위한 공간<br>상수(constant) 값을 한번만 저장할 수 있는 공간<br>리터럴(literal) 그 자체로 값을 의미 하는 것</p></blockquote>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAJA02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 6.조건문.</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAJA07/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAJA07/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;조건문-if&quot;&gt;&lt;a href=&quot;#조건문-if&quot; class=&quot;headerlink&quot; title=&quot;조건문 - if&quot;&gt;&lt;/a&gt;조건문 - if&lt;/h3&gt;&lt;p&gt;조건문은 조간식과 문장을 포함하는 블럭 {}으로 구성이 되어 있고, 조건식의 연산결과에 따라 실행할 문장이 달라서 프로그램의 실행흐름을 변경 할 수 있는 것이다.&lt;/p&gt;
&lt;p&gt;조건문은 if문과 switch으로 나눠지는데 주로 if문을 많이 사용한다. 처리할 경우의 수가 많을때는 switch을 사용한다고 하는데 나는 if문이 좋다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="조건문-if"><a href="#조건문-if" class="headerlink" title="조건문 - if"></a>조건문 - if</h3><p>조건문은 조간식과 문장을 포함하는 블럭 {}으로 구성이 되어 있고, 조건식의 연산결과에 따라 실행할 문장이 달라서 프로그램의 실행흐름을 변경 할 수 있는 것이다.</p><p>조건문은 if문과 switch으로 나눠지는데 주로 if문을 많이 사용한다. 처리할 경우의 수가 많을때는 switch을 사용한다고 하는데 나는 if문이 좋다.</p><span id="more"></span><h3 id="if문"><a href="#if문" class="headerlink" title="if문"></a>if문</h3><p>if문은 가장 기본적은 조건문이고, ‘조건식’과 괄호{}로 이루어져 있다. if의 뜻이 ‘만약 ~ 이라면’ 임으로 ‘만일 조건식이 참(true)이면 괄호{} 안의 문장들을 수행하라’라는 의미로 이해하면 된다..</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (조건식) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 조건식이 참이면(true)일 떄 수행할 문장들을 적는다 .</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>만일 다음과 같은 if문이 있을떄, 조건식 ‘score &gt; 60’이 참(true)이면 괄호{} 안의 문장이 수행되어 화면에 “합격입니다.” 라고 출력되고 거짓(false)이면, if문의 다음 문장으로 넘어간다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(score &gt; <span class="number">60</span>) &#123;</span><br><span class="line">   System.out.println(<span class="string">&quot;합격입니다.&quot;</span>);ㅣ</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위 if문의 조건식이 평가되는 과정을 단계별로 살펴보면 다음과 같다. 변수 score의 값을 80으로 가정 하면</p><blockquote><p>-&gt; score &gt; 60</p></blockquote><pre><code>-&gt; 80 &gt; 60-&gt; true</code></pre><p>위 조건식의 결과는 ‘true’이므로 if문 괄호{} 만의 문장이 실행된다. 만일 조건식의 결과가 ‘false’이면, 괄호{} 안의 문장은 수행되지 않을 것이다.</p><h3 id="조건식"><a href="#조건식" class="headerlink" title="조건식"></a>조건식</h3><p>if문에 사용되는 조건식은 일반적으로 비교연산자와 논리연산자로 구성된다. 이미 연산자를 배울 때 알려줬으니 넘어 가도록 하겠다.</p><p>조건식을 작성항 때 실수 하기 쉬운 것이, 등가비교 연산자 ‘==’ 대신 대입 연산자 ‘=’를 사용하는 것이다. 예를 들어서 ‘x가 0일 때 참’인 조건식은 ‘x == 0’인데 아래와 같이 실수로 ‘x = 0’이라고 적는 경우도 있다.</p><h3 id="if-else문"><a href="#if-else문" class="headerlink" title="if-else문"></a>if-else문</h3><p>if-else문은 ‘그 밖에 다른’ 이므로 조건식의 결과가 참이 아닐때, 즉 거짓이면 반환 하는 값이라고 생각하면 좋다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (조건식) &#123;</span><br><span class="line">    <span class="comment">// 조건식이 참 이면 실생 할 문장</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 조건식이 거짓 이면 실생 할 문장</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else-if-문"><a href="#if-else-if-문" class="headerlink" title="if-else if 문"></a>if-else if 문</h3><p>위에서 설명한 것에 따르면 if-else문은 2가지 경우 밖에 처리를 못하는데 지금 부터 말하는 if-else if문은 여러게의 조건들을 처리 할 수 있다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(조건식) &#123;</span><br><span class="line">    <span class="comment">// 조건식이 참 이면 실생 할 문장</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (조건식) &#123;</span><br><span class="line">    <span class="comment">// 조건식이 참 이면 실생 할 문장</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 조건식이 거짓 이면 실생 할 문장</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="중첩-if문"><a href="#중첩-if문" class="headerlink" title="중첩 if문"></a>중첩 if문</h3><p>중첩 if문은 말 그대로 if문을 중첩 해서 사용한다는 말 이다. 점수로 예를 들어보자</p><blockquote><p>90점이 A 라고 하고 90 이상중에서 98점은 A+ 이다</p></blockquote><p>위의 조건을 한번 해보자면 다음과 같아 진다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(A &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(A &gt;= <span class="number">98</span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이런식으로 if문안에 if를 넣는것을 중복 if 라고 한다. 한번에 처리 하기 어렵도 조건이 2개 이상 있으면 사용하기 좋다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      <category domain="http://dudqls5271.github.io/tags/%EC%A1%B0%EA%B1%B4%EB%AC%B8/">조건문</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAJA07/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 - 1. 변수(Variable) 란?</title>
      <link>http://dudqls5271.github.io/2021/10/14/hexo_JAVA01/</link>
      <guid>http://dudqls5271.github.io/2021/10/14/hexo_JAVA01/</guid>
      <pubDate>Thu, 14 Oct 2021 14:56:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;변수-Variable-란&quot;&gt;&lt;a href=&quot;#변수-Variable-란&quot; class=&quot;headerlink&quot; title=&quot;변수(Variable) 란?&quot;&gt;&lt;/a&gt;변수(Variable) 란?&lt;/h2&gt;&lt;p&gt;수학에서 ‘변수’를 ‘변하는 수’ 라고 정의하지만 프로그래밍언에서의 &lt;span style=&quot;color: red&quot;&gt;변수(Variable)는 값을 지정할 수 있는 메모리상의 공간을 의미 한다.&lt;/span&gt; 이 공간에 저장된 값은 변경될 수 있기에 변수(Variable)라는 수학용어의 정의와 상통하는 면이 있기에 변수 라고 불리게 된것이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;변수(Variable)는 값을 지정할 수 있는 메모리상의 공간을 의미 한다.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="변수-Variable-란"><a href="#변수-Variable-란" class="headerlink" title="변수(Variable) 란?"></a>변수(Variable) 란?</h2><p>수학에서 ‘변수’를 ‘변하는 수’ 라고 정의하지만 프로그래밍언에서의 <span style="color: red">변수(Variable)는 값을 지정할 수 있는 메모리상의 공간을 의미 한다.</span> 이 공간에 저장된 값은 변경될 수 있기에 변수(Variable)라는 수학용어의 정의와 상통하는 면이 있기에 변수 라고 불리게 된것이다.</p><blockquote><p>변수(Variable)는 값을 지정할 수 있는 메모리상의 공간을 의미 한다.</p></blockquote><span id="more"></span> </br><h2 id="변수의-선언과-초기화"><a href="#변수의-선언과-초기화" class="headerlink" title="변수의 선언과 초기화"></a>변수의 선언과 초기화</h2><p>변수를 사용할려면 먼저 변수를 선언해야하는데, 변수의 선언방법은 다음과 같다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br></pre></td></tr></table></figure><p>변수타입은 변수에 지정된 값이 어떤 ‘타입(type)’인지를 지정하는 것이다. 지정하고자 하는 값이 종류에 맞게 변수의 타입을 선택해서 적어주면 된다.</p><p><b>변수이름</b>운 말 그대로 변수에 붙인 이름이다. 변수는 ‘값을 저장 할 수 있는메모지 공간’ 이므로 변수의 이름은 메모리 공간에 이름을 붙여주는 것이다. 그래야 그 이름을 이용해 서 저장공간에 값읋 지정하고, 지정된 값을 읽어오기도 할 수 있는 것이다.</p></br><h2 id="변수의-초기화"><a href="#변수의-초기화" class="headerlink" title="변수의 초기화"></a>변수의 초기화</h2><p>변수를 선언한 이후로 부터는 변수를 사용할 수 있으나, 그 전에 반드시 ‘초기화’을 해야한다. ㅂ메모리는 여러 프로그램이 공유하는 자원이므로 전에 다른 프로그램에의해 저장된 ‘알 수 없는 값(쓰래기 값, garbage value)’가 남아 있을 수 있기 때문이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//변수 i을 선언하고 0으로 초기화 한다.</span></span><br><span class="line"><span class="keyword">int</span> i  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>위에서 본것 처럼 a 와 b을 한번에 <b>int a,b;</b>로 선언 할 수 있고,<br>int j = 0;<br>int k = 0;<br>은 <b>int j = 0, k = 0;</b>로 선언할 수 있다.</p></br><h2 id="변수의-명명규칙"><a href="#변수의-명명규칙" class="headerlink" title="변수의 명명규칙"></a>변수의 명명규칙</h2><p>‘변수의 이름’처럼 프로그래밍에 사용하는 모든 이름은 <b>‘식별자(identifier)’</b>라고 하며, 식별자는 같은 영역 내에서 서로 구분(식별)될 수 있어야 한다. 그리고 식별자를 만들 때는 다음과 같은 규칙을 지켜야 한다.</p><blockquote><ol start="0"><li>변수는 반드시 다른 사람이 보았을 때 알아볼 수 있어야 한다.<br>-test, a, a1, a2 이런거는 절때 사용하면 않된다.</li><li>대소문자 구분되며 길이에 제한이 없다.<br>-YoungBin와 youngbin는 서로 다른 것으로 간주한다.</li><li>예약어를 사용해서는 안 된다.<br>-true와 같은 프로그래밍언어 상에서 사용되는 단어는 변수의 이름으로 사용할 수 없다.</li><li>숫자로 시작해서눈 안 돤다.<br>-top10은 허용되지만 10top은 안 된다.</li><li>특수 문자는 ‘_‘와 ‘$’만을 허용한다.<br>-$narp은 허용되지만, S#sarp는 허용되지 않는다.</li></ol></blockquote><p>0번째 처럼 변수이름을 지정했다가는 당시에는 알 수 있겠지만 정작 1일이라도 그 코드을 보지 않는다면 그 변수가 무엇을 의미 하는지 모를수도 있다. 그리고 회사나 학교에서 같이 프로젝트를 하다 보면 다른 사람도 test나 a1, a2 같은 변수를 보고 찾아야 함으로 변수의 이름은 꼭 그게 맞는 이름으로 해주길 바란다.</p>]]></content:encoded>
      
      
      
      <category domain="http://dudqls5271.github.io/tags/java/">java</category>
      
      
      <comments>http://dudqls5271.github.io/2021/10/14/hexo_JAVA01/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
